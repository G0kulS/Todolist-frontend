{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstackproject\\\\todolist\\\\src\\\\Remainder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Getsingletask } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Remainder() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [taskname, updatetaskname] = useState(\"\");\n  const [taskdes, updatetaskdes] = useState(\"\");\n  const [taskstatus, updatetaskstatus] = useState(\"\");\n  const [tt, updatett] = useState(\"\");\n  useEffect(async () => {\n    let result = await Getsingletask(id);\n    console.log(result.data);\n\n    if (result.data.Completed == true) {\n      history.push(\"/\");\n    } else {\n      updatetaskname(result.data.Taskname);\n      updatetaskdes(result.data.Taskdescription);\n      updatett(result.data.TaskTime);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"offset-4 col-3\",\n          children: \"Taskname : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Remainder, \"y2o1t2sSAKfyWgutP33eEky1Evc=\", false, function () {\n  return [useParams];\n});\n\n_c = Remainder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Remainder\");","map":{"version":3,"sources":["D:/Fullstackproject/todolist/src/Remainder.js"],"names":["React","useEffect","useState","useHistory","useParams","Getsingletask","Remainder","id","taskname","updatetaskname","taskdes","updatetaskdes","taskstatus","updatetaskstatus","tt","updatett","result","console","log","data","Completed","history","push","Taskname","Taskdescription","TaskTime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,eAAe,SAASC,SAAT,GACf;AAAA;;AACG,QAAM;AAACC,IAAAA;AAAD,MAAOH,SAAS,EAAtB;AACA,QAAM,CAACI,QAAD,EAAUC,cAAV,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAASC,aAAT,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,UAAD,EAAYC,gBAAZ,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,EAAD,EAAIC,QAAJ,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AACCD,EAAAA,SAAS,CAAC,YAAS;AACjB,QAAIe,MAAM,GAAG,MAAMX,aAAa,CAACE,EAAD,CAAhC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,QAAGH,MAAM,CAACG,IAAP,CAAYC,SAAZ,IAAuB,IAA1B,EACA;AACEC,MAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACD,KAHD,MAKA;AACEb,MAAAA,cAAc,CAACO,MAAM,CAACG,IAAP,CAAYI,QAAb,CAAd;AACAZ,MAAAA,aAAa,CAACK,MAAM,CAACG,IAAP,CAAYK,eAAb,CAAb;AACAT,MAAAA,QAAQ,CAACC,MAAM,CAACG,IAAP,CAAYM,QAAb,CAAR;AACD;AACF,GAbQ,EAaP,EAbO,CAAT;AAcD,sBAAO;AAAA,2BACN;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,+BACE;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,UAAP;AASF;;GA9BuBnB,S;UAERF,S;;;KAFQE,S","sourcesContent":["import React, { useEffect, useState } from \"react\"; \r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Getsingletask } from \"./api\";\r\n\r\nexport default function Remainder()\r\n{   \r\n   const {id} = useParams();\r\n   const [taskname,updatetaskname] = useState(\"\");\r\n   const [taskdes,updatetaskdes] = useState(\"\");\r\n   const [taskstatus,updatetaskstatus] = useState(\"\");\r\n   const [tt,updatett] = useState(\"\");\r\n    useEffect(async()=>{\r\n      let result = await Getsingletask(id);\r\n      console.log(result.data);\r\n      if(result.data.Completed==true)\r\n      {\r\n        history.push(\"/\")\r\n      }\r\n      else\r\n      {\r\n        updatetaskname(result.data.Taskname);\r\n        updatetaskdes(result.data.Taskdescription);\r\n        updatett(result.data.TaskTime);\r\n      }\r\n    },[])\r\n   return <div>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class='offset-4 col-3'>\r\n              Taskname : {}\r\n          </div>\r\n        </div>\r\n        </div>    \r\n     </div> \r\n}"]},"metadata":{},"sourceType":"module"}