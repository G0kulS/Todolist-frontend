{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Gokul/Documents/GitHub/Todolist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Gokul/Documents/GitHub/Todolist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Gokul/Documents/GitHub/Todolist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useHistory,useParams}from\"react-router\";import{Resetpwd}from\"./api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Resetpassword(){var _useParams=useParams(),id=_useParams.id;var history=useHistory();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),password=_useState2[0],udpatepassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),cpassword=_useState4[0],udpatecpassword=_useState4[1];var _useState5=useState(\"password\"),_useState6=_slicedToArray(_useState5,2),type=_useState6[0],updatetype=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],updatemessage=_useState8[1];return/*#__PURE__*/_jsx(\"div\",{class:\"reset\",children:/*#__PURE__*/_jsx(\"div\",{class:\"container-fluid\",children:/*#__PURE__*/_jsx(\"div\",{class:\"row\",children:/*#__PURE__*/_jsx(\"div\",{class:\"offset-4 col-4\",children:/*#__PURE__*/_jsxs(\"form\",{class:\"resetpass\",onSubmit:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var obj,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();obj={password:password};_context.next=4;return Resetpwd(id,obj);case 4:result=_context.sent;if(password===cpassword){if(result.data.message==\"password updated\"){updatemessage(result.data.message);udpatepassword(\"\");udpatecpassword(\"\");setTimeout(function(){history.push(\"/\");},3000);}}else{udpatepassword(\"\");udpatecpassword(\"\");updatemessage(\"Password must be identical\");}case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),children:[/*#__PURE__*/_jsxs(\"div\",{class:\"mb-3 row\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"inputPassword\",class:\" col-form-label\",children:\"Password\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:type,class:\"form-control\",id:\"inputPassword\",value:password,onChange:function onChange(e){udpatepassword(e.target.value);},required:true,minLength:\"8\"})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"mb-3 row\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"inputPassword\",class:\" col-form-label\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:type,class:\"form-control\",id:\"inputPassword\",value:cpassword,onChange:function onChange(e){udpatecpassword(e.target.value);},required:true,minLength:\"8\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"showpassword\",name:\"showpassword\",onChange:function onChange(e){if(type==\"password\"){updatetype(\"text\");}else{updatetype(\"password\");}}}),/*#__PURE__*/_jsx(\"label\",{for:\"vehicle1\",children:\"\\xA0Show Password\"}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"div\",{style:{color:\"green\"},children:message}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-primary\",type:\"submit\",children:\"Save\"})]})]})})})})});}","map":{"version":3,"sources":["C:/Users/Gokul/Documents/GitHub/Todolist-frontend/src/Resetpassword.js"],"names":["React","useState","useHistory","useParams","Resetpwd","Resetpassword","id","history","password","udpatepassword","cpassword","udpatecpassword","type","updatetype","message","updatemessage","e","preventDefault","obj","result","data","setTimeout","push","target","value","color"],"mappings":"qfAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,cAAtC,CACA,OAAQC,QAAR,KAAuB,OAAvB,C,wFAEA,MAAO,SAASC,CAAAA,aAAT,EACP,CACE,eAAaF,SAAS,EAAtB,CAAOG,EAAP,YAAOA,EAAP,CACA,GAAMC,CAAAA,OAAO,CAAGL,UAAU,EAA1B,CACA,cAAiCD,QAAQ,CAAC,EAAD,CAAzC,wCAAMO,QAAN,eAAeC,cAAf,eACA,eAAmCR,QAAQ,CAAC,EAAD,CAA3C,yCAAMS,SAAN,eAAgBC,eAAhB,eACA,eAAyBV,QAAQ,CAAC,UAAD,CAAjC,yCAAMW,IAAN,eAAWC,UAAX,eACA,eAA+BZ,QAAQ,CAAC,EAAD,CAAvC,yCAAMa,OAAN,eAAcC,aAAd,eACE,mBAAQ,YAAK,KAAK,CAAC,OAAX,uBACA,YAAK,KAAK,CAAC,iBAAX,uBACH,YAAK,KAAK,CAAC,KAAX,uBACI,YAAK,KAAK,CAAC,gBAAX,uBACG,cAAM,KAAK,CAAC,WAAZ,CAAwB,QAAQ,0FAC7B,iBAAOC,CAAP,iIACKA,CAAC,CAACC,cAAF,GACIC,GAFT,CAEe,CAACV,QAAQ,CAARA,QAAD,CAFf,uBAGwBJ,CAAAA,QAAQ,CAACE,EAAD,CAAIY,GAAJ,CAHhC,QAGSC,MAHT,eAIK,GAAGX,QAAQ,GAAGE,SAAd,CACA,CACA,GAAGS,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqB,kBAAxB,CACA,CACIC,aAAa,CAACI,MAAM,CAACC,IAAP,CAAYN,OAAb,CAAb,CACAL,cAAc,CAAC,EAAD,CAAd,CACAE,eAAe,CAAC,EAAD,CAAf,CACAU,UAAU,CAAC,UAAI,CAACd,OAAO,CAACe,IAAR,CAAa,GAAb,EAAkB,CAAxB,CAA0B,IAA1B,CAAV,CAEH,CAAC,CATF,IAWA,CACIb,cAAc,CAAC,EAAD,CAAd,CACAE,eAAe,CAAC,EAAD,CAAf,CACAI,aAAa,CAAC,4BAAD,CAAb,CACH,CAnBN,sDAD6B,8DAAhC,wBAuBH,aAAK,KAAK,CAAC,UAAX,wBACC,cAAO,GAAG,CAAC,eAAX,CAA2B,KAAK,CAAC,iBAAjC,sBADD,kBACqE,aADrE,cAGA,cAAO,IAAI,CAAEH,IAAb,CAAmB,KAAK,CAAC,cAAzB,CAAwC,EAAE,CAAC,eAA3C,CAA2D,KAAK,CAAEJ,QAAlE,CAA4E,QAAQ,CAChF,kBAACQ,CAAD,CAAK,CACDP,cAAc,CAACO,CAAC,CAACO,MAAF,CAASC,KAAV,CAAd,CACH,CAHL,CAIE,QAAQ,KAJV,CAIW,SAAS,CAAC,GAJrB,EAHA,GAvBG,cAiCC,aAAK,KAAK,CAAC,UAAX,wBACH,cAAO,GAAG,CAAC,eAAX,CAA2B,KAAK,CAAC,iBAAjC,8BADG,cACwE,aADxE,cAGX,cAAO,IAAI,CAAEZ,IAAb,CAAmB,KAAK,CAAC,cAAzB,CAAwC,EAAE,CAAC,eAA3C,CAA2D,KAAK,CAAEF,SAAlE,CAA6E,QAAQ,CACjF,kBAACM,CAAD,CAAK,CACDL,eAAe,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV,CAAf,CACH,CAHL,CAIE,QAAQ,KAJV,CAIW,SAAS,CAAC,GAJrB,EAHW,GAjCD,cA2CC,oCACA,cAAO,IAAI,CAAC,UAAZ,CAAuB,EAAE,CAAC,cAA1B,CAAyC,IAAI,CAAC,cAA9C,CAA6D,QAAQ,CACjE,kBAACR,CAAD,CAAK,CACD,GAAGJ,IAAI,EAAE,UAAT,CACA,CACEC,UAAU,CAAC,MAAD,CAAV,CACD,CAHD,IAKA,CACIA,UAAU,CAAC,UAAD,CAAV,CACH,CAEJ,CAXL,EADA,cAcA,cAAQ,GAAG,CAAC,UAAZ,+BAdA,cAckD,aAdlD,GA3CD,cA2DC,YAAK,KAAK,CAAE,CAACY,KAAK,CAAC,OAAP,CAAZ,UACKX,OADL,EA3DD,cA6DO,aA7DP,cA8DC,wCAAM,eAAQ,KAAK,CAAC,iBAAd,CAAgC,IAAI,CAAC,QAArC,kBAAN,GA9DD,GADH,EADJ,EADG,EADA,EAAR,CAyEH","sourcesContent":["import React, { useState } from \"react\"; \r\nimport { useHistory, useParams } from \"react-router\";\r\nimport {Resetpwd} from \"./api\";\r\n\r\nexport function Resetpassword()\r\n{ \r\n  const {id} = useParams();\r\n  const history = useHistory();\r\n  const[password,udpatepassword] = useState(\"\");\r\n  const[cpassword,udpatecpassword] = useState(\"\");\r\n  const[type,updatetype] = useState(\"password\");\r\n  const[message,updatemessage] = useState(\"\");\r\n    return  <div class=\"reset\">\r\n            <div class=\"container-fluid\">\r\n         <div class=\"row\">\r\n             <div class=\"offset-4 col-4\">\r\n                <form class=\"resetpass\" onSubmit={\r\n                   async (e)=>{\r\n                        e.preventDefault();\r\n                        let obj = {password};\r\n                        let result = await Resetpwd(id,obj);\r\n                        if(password===cpassword)\r\n                        {\r\n                        if(result.data.message==\"password updated\")\r\n                        {\r\n                            updatemessage(result.data.message);\r\n                            udpatepassword(\"\");\r\n                            udpatecpassword(\"\");\r\n                            setTimeout(()=>{history.push(\"/\")}, 3000);\r\n                            \r\n                        }}\r\n                        else\r\n                        {\r\n                            udpatepassword(\"\");\r\n                            udpatecpassword(\"\");\r\n                            updatemessage(\"Password must be identical\");\r\n                        }\r\n                    }\r\n                }>\r\n             <div class=\"mb-3 row\">\r\n              <label for=\"inputPassword\" class=\" col-form-label\">Password</label> <br/>\r\n                \r\n             <input type={type} class=\"form-control\" id=\"inputPassword\" value={password} onChange={\r\n                 (e)=>{\r\n                     udpatepassword(e.target.value);\r\n                 }\r\n             } required minLength=\"8\" />\r\n             \r\n                 </div>\r\n                 <div class=\"mb-3 row\">\r\n              <label for=\"inputPassword\" class=\" col-form-label\">Confirm Password</label><br/>\r\n                \r\n      <input type={type} class=\"form-control\" id=\"inputPassword\" value={cpassword} onChange={\r\n          (e)=>{\r\n              udpatecpassword(e.target.value);\r\n          }\r\n      } required minLength=\"8\"/>\r\n    </div>\r\n                 \r\n                 <div>\r\n                 <input type=\"checkbox\" id=\"showpassword\" name=\"showpassword\" onChange={\r\n                     (e)=>{\r\n                         if(type==\"password\")\r\n                         {\r\n                           updatetype(\"text\");\r\n                         }\r\n                         else\r\n                         {\r\n                             updatetype(\"password\");\r\n                         }\r\n\r\n                     }\r\n                 }/>\r\n                 < label for=\"vehicle1\">&nbsp;Show Password</label><br/>\r\n                 </div>\r\n                 <div style={{color:\"green\"}}>\r\n                     {message}\r\n                 </div><br/>\r\n                 <div> <button class=\"btn btn-primary\" type=\"submit\">Save</button>\r\n                     </div>\r\n                 </form>\r\n             </div>\r\n             </div>\r\n    </div>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}