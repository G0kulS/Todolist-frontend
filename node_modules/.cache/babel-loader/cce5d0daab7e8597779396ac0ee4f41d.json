{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstackproject\\\\todolist\\\\src\\\\calender.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Calender() {\n  _s();\n\n  let date = new Date();\n  let [currentmonth, updatecurrentmonth] = useState(0);\n  let [firstline, updatefirstline] = useState([]);\n  let [nextline, updatenextline] = useState([]);\n  let [month, updatemonth] = useState(\"\");\n  useEffect(() => {\n    let firstday = new Date(date.getFullYear(), date.getMonth(), 1).toString().split(\" \")[0];\n    let lastday = new Date(date.getFullYear(), date.getMonth() + 1, 0).toString().split(\" \")[2];\n    updatefirstline([...makeFirstLine(findStartDay(firstday))]);\n    updatenextline([...makeNextLine(findStartDay(firstday), +lastday)]);\n    updatecurrentmonth(date.getMonth() + 1);\n    updatemonth(convertToMonth(date.getMonth() + 1));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"offset-1 col-1 sidebutton\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"alignbutton\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn\",\n              onClick: () => {\n                if (currentmonth >= 2) {\n                  let temp = currentmonth - 1;\n                  updatecurrentmonth(temp);\n                  updatemonth(convertToMonth(temp));\n                }\n              },\n              children: \"<<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-8 header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"monthname\",\n            children: month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-1 sidebutton\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"alignbutton\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn\",\n              onClick: () => {\n                if (currentmonth <= 11) {\n                  let temp = currentmonth + 1;\n                  updatecurrentmonth(temp);\n                  updatemonth(convertToMonth(temp));\n                }\n\n                let firstday = new Date(date.getFullYear(), temp - 1, 1).toString().split(\" \")[0];\n                let lastday = new Date(date.getFullYear(), temp, 0).toString().split(\" \")[2];\n                updatefirstline([...makeFirstLine(findStartDay(firstday))]);\n                updatenextline([...makeNextLine(findStartDay(firstday), +lastday)]);\n              },\n              children: \">>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-1 sidebutton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-primary logout\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid row offset-1 col-11\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Sun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Mon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Tue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Wed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Thu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Fri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Sat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: firstline.map(i => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this), nextline.map(i => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: i.map(j => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: j\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Calender, \"eZdrbUN6GvVEfOwlbjuOZJ5v1MY=\");\n\n_c = Calender;\n\nfunction convertToMonth(num) {\n  switch (num) {\n    case 1:\n      {\n        return \"January\";\n      }\n\n    case 2:\n      {\n        return \"Febuary\";\n      }\n\n    case 3:\n      {\n        return \"March\";\n      }\n\n    case 4:\n      {\n        return \"April\";\n      }\n\n    case 5:\n      {\n        return \"May\";\n      }\n\n    case 6:\n      {\n        return \"June\";\n      }\n\n    case 7:\n      {\n        return \"July\";\n      }\n\n    case 8:\n      {\n        return \"August\";\n      }\n\n    case 9:\n      {\n        return \"September\";\n      }\n\n    case 10:\n      {\n        return \"October\";\n      }\n\n    case 11:\n      {\n        return \"November\";\n      }\n\n    case 12:\n      {\n        return \"December\";\n      }\n  }\n}\n\nfunction findStartDay(day) {\n  switch (day) {\n    case \"sun\":\n      return 0;\n\n    case \"Mon\":\n      return 1;\n\n    case \"Tue\":\n      return 2;\n\n    case \"Wed\":\n      return 3;\n\n    case \"Thu\":\n      return 4;\n\n    case \"Fri\":\n      return 5;\n\n    case \"Sat\":\n      return 6;\n  }\n}\n\nfunction makeFirstLine(day) {\n  let arr = [];\n  let i = 1;\n\n  for (; i <= day; i++) {\n    arr.push(\" \");\n  }\n\n  for (let j = 1; i <= 7; i++) {\n    arr.push(j);\n  }\n\n  return arr;\n}\n\nfunction makeNextLine(day, length) {\n  let filleddays = 7 - day;\n  let arr = [];\n  let remainingdays = length - filleddays;\n  let start = filleddays + 1;\n\n  if (remainingdays % 7 == 0) {\n    remainingdays /= 7;\n  } else {\n    remainingdays = Math.floor(remainingdays / 7);\n    remainingdays++;\n  }\n\n  for (let i = 0; i < remainingdays; i++) {\n    let temp = [];\n\n    for (let j = 0; j < 7 && start <= length; j++, start++) {\n      temp.push(start);\n    }\n\n    arr.push(temp);\n  }\n\n  return arr;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"sources":["D:/Fullstackproject/todolist/src/calender.js"],"names":["React","useEffect","useState","Calender","date","Date","currentmonth","updatecurrentmonth","firstline","updatefirstline","nextline","updatenextline","month","updatemonth","firstday","getFullYear","getMonth","toString","split","lastday","makeFirstLine","findStartDay","makeNextLine","convertToMonth","temp","map","i","j","num","day","arr","push","length","filleddays","remainingdays","start","Math","floor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function Calender()\r\n{   \r\n    let date = new Date();\r\n    let [currentmonth,updatecurrentmonth] = useState(0);\r\n    let[firstline,updatefirstline] = useState([]);\r\n    let[nextline,updatenextline] = useState([]);\r\n    let[month,updatemonth] = useState(\"\");\r\n    useEffect(()=>{\r\n     let firstday = new Date(date.getFullYear(),date.getMonth(),1).toString().split(\" \")[0];\r\n     let lastday = new Date(date.getFullYear(),date.getMonth()+1,0).toString().split(\" \")[2];   \r\n     updatefirstline([...makeFirstLine(findStartDay(firstday))]);\r\n     updatenextline([...makeNextLine(findStartDay(firstday),+lastday)]);\r\n     updatecurrentmonth(date.getMonth()+1);\r\n     updatemonth(convertToMonth(date.getMonth()+1))\r\n    },[])\r\n    \r\n    \r\n    return <>\r\n     <div class=\"container-fluid \">\r\n     <div class=\"row\">\r\n     <div class=\"offset-1 col-1 sidebutton\"><span class=\"alignbutton\"><button class=\"btn\" onClick={\r\n         ()=>{\r\n          if(currentmonth>=2)\r\n          {   \r\n            let temp = currentmonth - 1; \r\n            updatecurrentmonth(temp);\r\n            updatemonth(convertToMonth(temp));}\r\n         }\r\n     }>&#60;&#60;</button></span></div>\r\n     <div class=\"col-8 header\"><span class=\"monthname\">{month}</span></div>   \r\n     <div class=\"col-1 sidebutton\"><span class=\"alignbutton\"><button class=\"btn\" onClick={\r\n         ()=>{\r\n          if(currentmonth<=11)\r\n          {   \r\n          let temp = currentmonth + 1; \r\n          updatecurrentmonth(temp);\r\n          updatemonth(convertToMonth(temp));}\r\n          let firstday = new Date(date.getFullYear(),temp-1,1).toString().split(\" \")[0];\r\n          let lastday = new Date(date.getFullYear(),temp,0).toString().split(\" \")[2];   \r\n         updatefirstline([...makeFirstLine(findStartDay(firstday))]);\r\n         updatenextline([...makeNextLine(findStartDay(firstday),+lastday)]);\r\n          \r\n         }\r\n         \r\n     }>&#62;&#62;</button></span></div>\r\n     <div class=\"col-1 sidebutton\"><button class=\"btn btn-primary logout\">Logout</button></div>\r\n    </div>\r\n    </div>\r\n    <div class=\"container-fluid row offset-1 col-11\">\r\n    <table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Sun</th>\r\n        <th scope=\"col\">Mon</th>\r\n        <th scope=\"col\">Tue</th>\r\n        <th scope=\"col\">Wed</th>\r\n        <th scope=\"col\">Thu</th>\r\n        <th scope=\"col\">Fri</th>\r\n        <th scope=\"col\">Sat</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n     {  <tr>{ \r\n        firstline.map((i)=>{\r\n         return <td>{i}</td>\r\n        })}</tr>\r\n     }\r\n     {\r\n         nextline.map((i)=>{\r\n             return <tr>{i.map((j)=>{\r\n                 return <td>{j}</td>\r\n             })}</tr>\r\n         })\r\n     }\r\n    </tbody>\r\n  </table>\r\n  </div></>\r\n}\r\n\r\nfunction convertToMonth(num)\r\n{\r\n  switch(num)\r\n  {\r\n      case 1 : \r\n      {\r\n          return \"January\";\r\n      }\r\n      case 2 : \r\n      {\r\n          return \"Febuary\";\r\n      }\r\n      case 3 :\r\n      {\r\n          return \"March\"\r\n      }\r\n      case 4 :\r\n      {\r\n          return \"April\"\r\n      }\r\n      case 5 :\r\n      {\r\n            return \"May\"\r\n      }\r\n      case 6 :\r\n        {\r\n            return \"June\"\r\n        }\r\n      case 7:\r\n        {\r\n            return \"July\"\r\n        }\r\n        case 8:\r\n        {\r\n            return \"August\"\r\n        } \r\n        case 9:\r\n        {\r\n            return \"September\"\r\n        } \r\n        case 10:\r\n        {\r\n            return \"October\"\r\n        } \r\n        case 11:\r\n        {\r\n            return \"November\"\r\n        } \r\n        case 12:\r\n        {\r\n            return \"December\"\r\n        } \r\n  }\r\n}\r\nfunction findStartDay(day)\r\n{\r\n    switch(day)\r\n    {\r\n        case \"sun\": return 0 ; \r\n        case \"Mon\": return 1 ; \r\n        case \"Tue\": return 2 ; \r\n        case \"Wed\": return 3 ; \r\n        case \"Thu\": return 4 ; \r\n        case \"Fri\": return 5 ; \r\n        case \"Sat\": return 6 ; \r\n    }\r\n}\r\n\r\nfunction makeFirstLine(day)\r\n{\r\n  let arr = [];\r\n  let i = 1 \r\n  for(; i <=day;i++)\r\n  {\r\n      arr.push(\" \");\r\n  }\r\n  for(let j = 1 ; i<=7;i++)\r\n  {\r\n      arr.push(j)\r\n  }\r\n  return arr;\r\n}\r\nfunction makeNextLine(day,length)\r\n{\r\n  let filleddays = 7 - day; \r\n  let arr = [] ; \r\n  let remainingdays = length -filleddays;\r\n  let start = filleddays+1;\r\n  \r\n  if(remainingdays%7==0)\r\n  {\r\n      remainingdays/=7;\r\n  }\r\n  else\r\n  {\r\n      remainingdays= Math.floor(remainingdays/7);\r\n      remainingdays++;\r\n  }\r\n  for(let i = 0 ; i<remainingdays;i++)\r\n  {\r\n      let temp = [];\r\n      for(let j =0 ;j<7 && start<=length;j++,start++)\r\n      {   \r\n          \r\n          temp.push(start)\r\n      }\r\n      arr.push(temp);\r\n  } \r\n  return arr;\r\n}"]},"metadata":{},"sourceType":"module"}