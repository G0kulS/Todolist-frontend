{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstackproject\\\\todolist\\\\src\\\\Remainder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Deletetask, Getsingletask, Updatesingletask } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Remainder() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [taskname, updatetaskname] = useState(\"\");\n  const [taskdes, updatetaskdes] = useState(\"\");\n  const [taskstatus, updatetaskstatus] = useState(false);\n  const [tt, updatett] = useState(\"\");\n  useEffect(async () => {\n    let result = await Getsingletask(id);\n    console.log(result.data);\n\n    if (result.data.available == true) {\n      if (result.data.Completed == true) {\n        history.push(\"/taskdone\");\n      } else {\n        updatetaskname(result.data.Taskname);\n        updatetaskdes(result.data.Taskdescription);\n        updatett(result.data.TaskTime);\n        updatetaskstatus(result.data.Completed);\n      }\n    } else {\n      history.push(\"/\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"reset\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"offset-4 col-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"textdes\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"design-text\",\n              children: \"   Taskname : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 12\n            }, this), \" \", taskname, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 76\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"design-text\",\n              children: \"  Taskdescription:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this), \" \", taskdes, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 75\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 80\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"design-text\",\n              children: \"   Tasktime :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this), \" \", tt, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 64\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 69\n            }, this), taskstatus == false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"design-text\",\n                children: \"Status :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Yet to Complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"design-text\",\n                children: \"Status :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 109\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"Green\"\n                },\n                children: \"Task Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 150\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-danger\",\n              onClick: async () => {\n                await Deletetask(id);\n                history.push(\"/\");\n              },\n              children: \"Cancel Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-success\",\n              onClick: async () => {\n                await Updatesingletask(id, {\n                  Completed: true\n                });\n                history.push(\"/taskdone\");\n              },\n              children: \"Task done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Remainder, \"NMXIKemRfbNJI0xqakj0e8CI1hU=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Remainder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Remainder\");","map":{"version":3,"sources":["D:/Fullstackproject/todolist/src/Remainder.js"],"names":["React","useEffect","useState","useHistory","useParams","Deletetask","Getsingletask","Updatesingletask","Remainder","id","history","taskname","updatetaskname","taskdes","updatetaskdes","taskstatus","updatetaskstatus","tt","updatett","result","console","log","data","available","Completed","push","Taskname","Taskdescription","TaskTime","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"; \r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Deletetask, Getsingletask, Updatesingletask } from \"./api\";\r\n\r\nexport default function Remainder()\r\n{   \r\n   const {id} = useParams();\r\n   const history = useHistory();\r\n   const [taskname,updatetaskname] = useState(\"\");\r\n   const [taskdes,updatetaskdes] = useState(\"\");\r\n   const [taskstatus,updatetaskstatus] = useState(false);\r\n   const [tt,updatett] = useState(\"\");\r\n    useEffect(async()=>{\r\n      let result = await Getsingletask(id);\r\n      console.log(result.data);\r\n      if(result.data.available==true)\r\n      {\r\n      if(result.data.Completed==true)\r\n      {\r\n        history.push(\"/taskdone\");\r\n      }\r\n      else\r\n      {\r\n        updatetaskname(result.data.Taskname);\r\n        updatetaskdes(result.data.Taskdescription);\r\n        updatett(result.data.TaskTime);\r\n        updatetaskstatus(result.data.Completed);\r\n      }\r\n    }else\r\n    {\r\n      history.push(\"/\")\r\n    }\r\n    },[])\r\n   return <div class=\"reset\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class='offset-4 col-5'>\r\n            <div class=\"textdes\">\r\n           <span class=\"design-text\">   Taskname : </span> {taskname} <br/><br/>\r\n            <span class=\"design-text\">  Taskdescription:</span> {taskdes} <br/><br/>\r\n            <span class=\"design-text\">   Tasktime :</span> {tt}<br/><br/>\r\n            {taskstatus==false?<><span class=\"design-text\">Status :</span><span>Yet to Complete</span></>:<><span class=\"design-text\">Status :</span><span style={{color:\"Green\"}}>Task Completed</span></>}\r\n            <br/><br/>\r\n            <button class=\"btn btn-danger\" onClick={async()=>{\r\n              await Deletetask(id);\r\n              history.push(\"/\");\r\n            }}>Cancel Event</button>&nbsp;&nbsp;&nbsp;&nbsp;<button class=\"btn btn-success\" onClick={\r\n              async()=>{\r\n                 await Updatesingletask(id,{Completed:true})\r\n                 history.push(\"/taskdone\");\r\n              }\r\n            }>Task done</button> \r\n              </div>\r\n             \r\n          </div>\r\n        </div>\r\n        </div>    \r\n     </div> \r\n}"]},"metadata":{},"sourceType":"module"}