{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstackproject\\\\todolist\\\\src\\\\taskcontext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/React.createContext();\nexport default TaskContext;\nexport const TaskDetails = ({\n  children\n}) => {\n  _s();\n\n  let [taskname, updatetaskname] = useState(\"\");\n  let [taskdes, updatetaskdes] = useState(\"\");\n  let [tasktime, updatetasktime] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      taskname,\n      taskdes,\n      tasktime,\n      updatetaskdes,\n      updatetaskname,\n      updatetasktime\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n};\n\n_s(TaskDetails, \"1Ipo+MQyUw+GfGP0jXGp2tv3s0s=\");\n\n_c = TaskDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetails\");","map":{"version":3,"sources":["D:/Fullstackproject/todolist/src/taskcontext.js"],"names":["React","useState","TaskContext","createContext","TaskDetails","children","taskname","updatetaskname","taskdes","updatetaskdes","tasktime","updatetasktime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;AAEA,eAAeD,WAAf;AAEA,OAAO,MAAME,WAAW,GAAK,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACzC,MAAI,CAACC,QAAD,EAAUC,cAAV,IAA2BN,QAAQ,CAAC,EAAD,CAAvC;AACA,MAAI,CAACO,OAAD,EAASC,aAAT,IAAyBR,QAAQ,CAAC,EAAD,CAArC;AACA,MAAI,CAACS,QAAD,EAAUC,cAAV,IAA2BV,QAAQ,CAAC,EAAD,CAAvC;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAI;AAACK,MAAAA,QAAD;AAAUE,MAAAA,OAAV;AAAkBE,MAAAA,QAAlB;AAA2BD,MAAAA,aAA3B;AAAyCF,MAAAA,cAAzC;AAAwDI,MAAAA;AAAxD,KAA/B;AAAA,cAAyGN;AAAzG;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CANM;;GAAMD,W;;KAAAA,W","sourcesContent":["import React, { useState }  from \"react\";\r\n\r\nconst TaskContext = React.createContext();\r\n\r\nexport default TaskContext;\r\n\r\nexport const TaskDetails =   ({children}) => {\r\n    let [taskname,updatetaskname]= useState(\"\");\r\n    let [taskdes,updatetaskdes]= useState(\"\");\r\n    let [tasktime,updatetasktime]= useState(\"\");\r\n   \r\n    return <TaskContext.Provider value = {{taskname,taskdes,tasktime,updatetaskdes,updatetaskname,updatetasktime}}>{children}</TaskContext.Provider>\r\n}"]},"metadata":{},"sourceType":"module"}