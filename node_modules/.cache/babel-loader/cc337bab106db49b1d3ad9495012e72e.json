{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstackproject\\\\todolist\\\\src\\\\Resetpassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Resetpassword() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [password, udpatepassword] = useState(\"\");\n  const [cpassword, udpatecpassword] = useState(\"\");\n  const [type, updatetype] = useState(\"password\");\n  const [message, updatemessage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"reset\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"offset-4 col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            class: \"resetpass\",\n            onSubmit: async e => {\n              e.preventDefault();\n              let obj = {\n                password\n              };\n              let res = await Resetpassword(id, obj);\n\n              if (res.data.message == \"password updated\") {\n                updatemessage(res.data.message);\n                history.push(\"/\");\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"mb-3 row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputPassword\",\n                class: \" col-form-label\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 83\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: type,\n                class: \"form-control\",\n                id: \"inputPassword\",\n                value: password,\n                onChange: e => {\n                  udpatepassword(e.target.value);\n                },\n                required: true,\n                minLength: \"8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"mb-3 row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputPassword\",\n                class: \" col-form-label\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 90\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: type,\n                class: \"form-control\",\n                id: \"inputPassword\",\n                value: cpassword,\n                onChange: e => {\n                  udpatecpassword(e.target.value);\n                },\n                required: true,\n                minLength: \"8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"showpassword\",\n                name: \"showpassword\",\n                onChange: e => {\n                  if (type == \"password\") {\n                    updatetype(\"text\");\n                  } else {\n                    updatetype(\"password\");\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"vehicle1\",\n                children: \"\\xA0Show Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"green\"\n              },\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-primary\",\n                type: \"submit\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Resetpassword, \"oWUigRPWhRkabf0y736RM6MXuLI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Resetpassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resetpassword\");","map":{"version":3,"sources":["D:/Fullstackproject/todolist/src/Resetpassword.js"],"names":["React","useState","useHistory","useParams","Resetpassword","id","history","password","udpatepassword","cpassword","udpatecpassword","type","updatetype","message","updatemessage","e","preventDefault","obj","res","data","push","target","value","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"; \r\nimport { useHistory, useParams } from \"react-router\";\r\n\r\n\r\nexport function Resetpassword()\r\n{ \r\n  const {id} = useParams();\r\n  const history = useHistory();\r\n  const[password,udpatepassword] = useState(\"\");\r\n  const[cpassword,udpatecpassword] = useState(\"\");\r\n  const[type,updatetype] = useState(\"password\");\r\n  const[message,updatemessage] = useState(\"\");\r\n    return  <div class=\"reset\">\r\n            <div class=\"container-fluid\">\r\n         <div class=\"row\">\r\n             <div class=\"offset-4 col-4\">\r\n                <form class=\"resetpass\" onSubmit={\r\n                   async (e)=>{\r\n                        e.preventDefault();\r\n                        let obj = {password};\r\n                        let res = await Resetpassword(id,obj);\r\n                        if(res.data.message==\"password updated\")\r\n                        {\r\n                            updatemessage(res.data.message);\r\n                            history.push(\"/\")\r\n                        }\r\n                    }\r\n                }>\r\n             <div class=\"mb-3 row\">\r\n              <label for=\"inputPassword\" class=\" col-form-label\">Password</label> <br/>\r\n                \r\n             <input type={type} class=\"form-control\" id=\"inputPassword\" value={password} onChange={\r\n                 (e)=>{\r\n                     udpatepassword(e.target.value);\r\n                 }\r\n             } required minLength=\"8\" />\r\n             \r\n                 </div>\r\n                 <div class=\"mb-3 row\">\r\n              <label for=\"inputPassword\" class=\" col-form-label\">Confirm Password</label><br/>\r\n                \r\n      <input type={type} class=\"form-control\" id=\"inputPassword\" value={cpassword} onChange={\r\n          (e)=>{\r\n              udpatecpassword(e.target.value);\r\n          }\r\n      } required minLength=\"8\"/>\r\n    </div>\r\n                 \r\n                 <div>\r\n                 <input type=\"checkbox\" id=\"showpassword\" name=\"showpassword\" onChange={\r\n                     (e)=>{\r\n                         if(type==\"password\")\r\n                         {\r\n                           updatetype(\"text\");\r\n                         }\r\n                         else\r\n                         {\r\n                             updatetype(\"password\");\r\n                         }\r\n\r\n                     }\r\n                 }/>\r\n                 < label for=\"vehicle1\">&nbsp;Show Password</label><br/>\r\n                 </div>\r\n                 <div style={{color:\"green\"}}>\r\n                     {message}\r\n                 </div><br/>\r\n                 <div> <button class=\"btn btn-primary\" type=\"submit\">Save</button>\r\n                     </div>\r\n                 </form>\r\n             </div>\r\n             </div>\r\n    </div>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}