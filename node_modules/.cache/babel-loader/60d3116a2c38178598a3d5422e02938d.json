{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstackproject\\\\todolist\\\\src\\\\task.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Modal } from 'react-bootstrap';\nimport { useHistory, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Addtask, Deletetask, Gettask, Updatetask } from \"./api\";\nimport TaskContext from \"./taskcontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Task() {\n  _s();\n\n  let history = useHistory();\n  let task = useContext(TaskContext);\n  let {\n    id\n  } = useParams();\n  const [tasklist, updatetasklist] = useState([]);\n  const [modalShow, setModalShow] = React.useState(false);\n  const [editmodalShow, seteditModalShow] = React.useState(false);\n  let [today, updatetoday] = useState(false);\n  let arr = id.split(\"-\");\n  let monthname = arr[1];\n  arr[1] = convertToNum(monthname);\n  let calenderlink = \"/calender/\" + arr[2]; // console.log(calenderlink)\n\n  useEffect(async () => {\n    task.updateuserdata([...arr]);\n    let obj = {\n      date: +arr[0],\n      month: arr[1]\n    };\n    let response = await Gettask(arr[2], obj);\n    updatetasklist([...response.data]);\n    let date = new Date();\n    let currentdate = date.getDate();\n    let currentmonth = date.getMonth(); // console.log(currentdate,currentmonth,+arr[0],arr[1]);\n\n    if (currentmonth > arr[1]) {\n      document.getElementById(\"addbutton\").style.visibility = \"hidden\";\n      console.log(\"button\", document.getElementById(\"addbutton\"));\n    } else {\n      if (currentmonth == arr[1] && currentdate > +arr[0]) {\n        document.getElementById(\"addbutton\").style.visibility = \"hidden\";\n      }\n\n      if (currentmonth == arr[1] && currentdate == arr[0]) {\n        updatetoday(true); // console.log(\"today\",today);\n      }\n    }\n  }, []);\n  useEffect(async () => {\n    task.updateuserdata([...arr]);\n    let obj = {\n      date: +arr[0],\n      month: arr[1]\n    };\n    let response = await Gettask(arr[2], obj);\n    updatetasklist([...response.data]);\n  }, [modalShow, editmodalShow]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid bg-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row  taskheader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-1\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-warning\",\n            onClick: () => {\n              history.push(calenderlink);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-arrow-circle-left fa-1x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 86\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-10 \",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"To do list on \", `${arr[0]}-${monthname}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-1\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-warning\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"addbutton btn btn-primary\",\n        id: \"addbutton\",\n        onClick: () => setModalShow(true),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-plus-circle fa-2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 101\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n        show: modalShow,\n        onHide: () => setModalShow(false),\n        id: id,\n        today: today\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"taskbackground\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table task\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            class: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              class: \"task time\",\n              scope: \"col\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              class: \"task name\",\n              scope: \"col\",\n              children: \"Task Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              class: \"task des\",\n              scope: \"col\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              class: \"task time\",\n              scope: \"col\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              class: \"task action\",\n              scope: \"col\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasklist.map(i => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              class: \"task \",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                class: \"task taskdata\",\n                children: i.TaskTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                class: \"task taskdata\",\n                children: i.Taskname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                class: \"task taskdata\",\n                children: i.Taskdescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 7\n              }, this), i.Completed == false ? /*#__PURE__*/_jsxDEV(\"td\", {\n                class: \"task taskdata\",\n                style: {\n                  color: `yellow`\n                },\n                children: \"waiting\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 26\n              }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                class: \"task taskdata\",\n                style: {\n                  color: `Green`\n                },\n                children: \"done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 89\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                class: \"task taskdata\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn btn-danger bigger\",\n                  onClick: async () => {\n                    await Deletetask(i._id);\n                    let obj = {\n                      date: +arr[0],\n                      month: arr[1]\n                    };\n                    let response = await Gettask(arr[2], obj);\n                    updatetasklist([...response.data]);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"far fa-calendar-times\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 9\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn btn-primary bigger\",\n                  onClick: () => {\n                    seteditModalShow(true);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"far fa-edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredEditModal, {\n                    show: editmodalShow,\n                    onHide: () => seteditModalShow(false),\n                    data: i,\n                    today: today\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 12\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Task, \"gDhF7UKSjXEZ5acHGAQp3HQHDFA=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Task;\n\nfunction MyVerticallyCenteredModal(props) {\n  _s2();\n\n  let task = useContext(TaskContext);\n  const [tname, updatetname] = useState(\"\");\n  const [tdes, updatetdes] = useState(\"\");\n  const [tt, updatett] = useState(\"\");\n  const [message, updatemessage] = useState(\"Press Esc to exit without saving\");\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: async e => {\n          e.preventDefault(); //console.log(props.today);\n\n          if (props.today == true) {\n            let date = new Date();\n            let currenthour = date.getHours();\n            let currentmin = date.getMinutes(); //console.log(tt);\n\n            let array = tt.split(\":\");\n\n            if (+array[0] >= currenthour) {\n              if (+array[0] > currenthour) {\n                let obj = {\n                  Taskname: tname,\n                  Taskdescription: tdes,\n                  TaskTime: tt,\n                  Taskmonth: task.userdata[1],\n                  Taskdate: +task.userdata[0],\n                  Userid: task.userdata[2],\n                  Completed: false\n                };\n                await Addtask(obj);\n                updatetname(\"\");\n                updatett(\"\");\n                updatetdes(\"\");\n                props.onHide();\n              } else {\n                if (currenthour == array[0] && array[1] >= currentmin + 10) {\n                  let obj = {\n                    Taskname: tname,\n                    Taskdescription: tdes,\n                    TaskTime: tt,\n                    Taskmonth: task.userdata[1],\n                    Taskdate: +task.userdata[0],\n                    Userid: task.userdata[2],\n                    Completed: false\n                  };\n                  await Addtask(obj);\n                  updatetname(\"\");\n                  updatett(\"\");\n                  updatetdes(\"\");\n                  props.onHide();\n                } else {\n                  updatemessage(\"Please register atleast a 10mins before\");\n                  updatett(\"\");\n                }\n              }\n            } else {\n              let obj = {\n                Taskname: tname,\n                Taskdescription: tdes,\n                TaskTime: tt,\n                Taskmonth: task.userdata[1],\n                Taskdate: +task.userdata[0],\n                Userid: task.userdata[2],\n                Completed: false\n              };\n              await Addtask(obj);\n              updatetname(\"\");\n              updatett(\"\");\n              updatetdes(\"\");\n              props.onHide();\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid row col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"taskname\",\n            class: \"form-label\",\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            id: \"taskname\",\n            required: true,\n            value: tname,\n            onChange: e => {\n              updatetname(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid row col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"description\",\n            class: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            class: \"form-control\",\n            id: \"description\",\n            rows: \"2\",\n            required: true,\n            value: tdes,\n            onChange: e => {\n              updatetdes(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid row  col-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"time\",\n            class: \"form-label\",\n            children: \"Time-(HH:mm-AM/PM)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            class: \"form-control form-sm\",\n            min: \"00:00\",\n            max: \"23:59\",\n            id: \"time\",\n            required: true,\n            value: tt,\n            onChange: e => {\n              updatett(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid row  col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"blue\"\n            },\n            children: [\" \", message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 11\n  }, this);\n}\n\n_s2(MyVerticallyCenteredModal, \"CL7bo3Hp4z4Y/vAsaYkuHywqI20=\");\n\n_c2 = MyVerticallyCenteredModal;\n\nfunction MyVerticallyCenteredEditModal(props) {\n  _s3();\n\n  const [tname, updatetname] = useState(props.data.Taskname);\n  const [tdes, updatetdes] = useState(props.data.Taskdescription);\n  const [tt, updatett] = useState(props.data.TaskTime);\n  const [message, updatemessage] = useState(\"Press Esc to exit without saving\");\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: async e => {\n          e.preventDefault();\n\n          if (props.today == true) {\n            let date = new Date();\n            let currenthour = date.getHours();\n            let currentmin = date.getMinutes(); //console.log(tt);\n\n            let array = tt.split(\":\");\n\n            if (+array[0] >= currenthour) {\n              if (+array[0] > currenthour) {\n                let obj = {\n                  Taskname: tname,\n                  Taskdescription: tdes,\n                  TaskTime: tt\n                };\n                let response = await Updatetask(props.data._id, obj);\n                console.log(response.data);\n                updatetname(\"\");\n                updatett(\"\");\n                updatetdes(\"\");\n                updatemessage(\"\");\n                props.onHide();\n                window.location.reload(false);\n              } else {\n                if (currenthour == array[0] && array[1] >= currentmin + 10) {\n                  let obj = {\n                    Taskname: tname,\n                    Taskdescription: tdes,\n                    TaskTime: tt\n                  };\n                  let response = await Updatetask(props.data._id, obj);\n                  console.log(response.data);\n                  updatetname(\"\");\n                  updatett(\"\");\n                  updatetdes(\"\");\n                  updatemessage(\"\");\n                  props.onHide();\n                  window.location.reload(false);\n                } else {\n                  updatemessage(\"Please register atleast a 10mins before\");\n                  updatett(\"\");\n                }\n              }\n            } else {\n              let obj = {\n                Taskname: tname,\n                Taskdescription: tdes,\n                TaskTime: tt\n              };\n              let response = await Updatetask(props.data._id, obj);\n              console.log(response.data);\n              updatetname(\"\");\n              updatett(\"\");\n              updatetdes(\"\");\n              updatemessage(\"\");\n              props.onHide();\n              window.location.reload(false);\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid row col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"taskname\",\n            class: \"form-label\",\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            id: \"taskname\",\n            required: true,\n            value: tname,\n            onChange: e => {\n              updatetname(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid row col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"description\",\n            class: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            class: \"form-control\",\n            id: \"description\",\n            rows: \"2\",\n            required: true,\n            value: tdes,\n            onChange: e => {\n              updatetdes(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid row  col-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"time\",\n            class: \"form-label\",\n            children: \"Time-(HH:mm-AM/PM)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            class: \"form-control form-sm\",\n            min: \"00:00\",\n            max: \"23:59\",\n            id: \"time\",\n            required: true,\n            value: tt,\n            onChange: e => {\n              updatett(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid row  col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"blue\"\n            },\n            children: [\" \", message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 11\n  }, this);\n}\n\n_s3(MyVerticallyCenteredEditModal, \"UXSnqHF+3RYAD2k+hkyFfZohB1s=\");\n\n_c3 = MyVerticallyCenteredEditModal;\n\nfunction convertToNum(Month) {\n  switch (Month) {\n    case \"January\":\n      {\n        return 0;\n      }\n\n    case \"Febuary\":\n      {\n        return 1;\n      }\n\n    case \"March\":\n      {\n        return 2;\n      }\n\n    case \"April\":\n      {\n        return 3;\n      }\n\n    case \"May\":\n      {\n        return 4;\n      }\n\n    case \"June\":\n      {\n        return 5;\n      }\n\n    case \"July\":\n      {\n        return 6;\n      }\n\n    case \"August\":\n      {\n        return 7;\n      }\n\n    case \"September\":\n      {\n        return 8;\n      }\n\n    case \"October\":\n      {\n        return 9;\n      }\n\n    case \"November\":\n      {\n        return 10;\n      }\n\n    case \"December\":\n      {\n        return 11;\n      }\n  }\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"MyVerticallyCenteredModal\");\n$RefreshReg$(_c3, \"MyVerticallyCenteredEditModal\");","map":{"version":3,"sources":["D:/Fullstackproject/todolist/src/task.js"],"names":["React","useContext","useEffect","useState","Button","Modal","useHistory","useParams","Link","Addtask","Deletetask","Gettask","Updatetask","TaskContext","Task","history","task","id","tasklist","updatetasklist","modalShow","setModalShow","editmodalShow","seteditModalShow","today","updatetoday","arr","split","monthname","convertToNum","calenderlink","updateuserdata","obj","date","month","response","data","Date","currentdate","getDate","currentmonth","getMonth","document","getElementById","style","visibility","console","log","push","map","i","TaskTime","Taskname","Taskdescription","Completed","color","_id","MyVerticallyCenteredModal","props","tname","updatetname","tdes","updatetdes","tt","updatett","message","updatemessage","e","preventDefault","currenthour","getHours","currentmin","getMinutes","array","Taskmonth","userdata","Taskdate","Userid","onHide","target","value","MyVerticallyCenteredEditModal","window","location","reload","Month"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button,Modal } from 'react-bootstrap';\r\nimport { useHistory, useParams } from \"react-router\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { Addtask, Deletetask, Gettask ,Updatetask } from \"./api\";\r\nimport TaskContext from \"./taskcontext\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function Task()\r\n{   \r\n    let history = useHistory();\r\n    let task = useContext(TaskContext);\r\n    let {id} = useParams();\r\n    const[tasklist,updatetasklist] = useState([]);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [editmodalShow, seteditModalShow] = React.useState(false);\r\n    let [today,updatetoday] = useState(false);\r\n    let arr = id.split(\"-\");\r\n    let monthname = arr[1];\r\n    arr[1] =convertToNum(monthname);\r\n    let calenderlink = \"/calender/\"+arr[2];\r\n   // console.log(calenderlink)\r\n    useEffect( async()=>{\r\n      task.updateuserdata([...arr]); \r\n      let obj = {\r\n        date : +arr[0],\r\n        month: arr[1]\r\n      }\r\n      let response = await Gettask(arr[2],obj)\r\n      updatetasklist([...response.data]);\r\n      let date = new Date();\r\n      let currentdate = date.getDate();\r\n      let currentmonth = date.getMonth();\r\n     // console.log(currentdate,currentmonth,+arr[0],arr[1]);\r\n      if(currentmonth>arr[1])\r\n      {\r\n          document.getElementById(\"addbutton\").style.visibility=\"hidden\";\r\n          console.log(\"button\" ,document.getElementById(\"addbutton\"));\r\n      }\r\n      else\r\n      {\r\n        if(currentmonth==arr[1]&&currentdate>+arr[0])\r\n        {\r\n          document.getElementById(\"addbutton\").style.visibility=\"hidden\";\r\n        }\r\n        if(currentmonth==arr[1]&&currentdate==arr[0])\r\n        {\r\n         updatetoday(true);\r\n        // console.log(\"today\",today);\r\n         \r\n        }\r\n      }\r\n    },[])\r\n    useEffect( async()=>{\r\n      task.updateuserdata([...arr]); \r\n      let obj = {\r\n        date : +arr[0],\r\n        month: arr[1]\r\n      }\r\n      let response = await Gettask(arr[2],obj)\r\n      updatetasklist([...response.data]);\r\n      \r\n    },[modalShow,editmodalShow])\r\n    return<> \r\n    <div class=\"container-fluid bg-primary\">\r\n        <div class=\"row  taskheader\">\r\n          \r\n          <div class=\"col-1\">\r\n          <button class=\"btn btn-warning\" onClick={()=>{history.push(calenderlink)}}><i class=\"fas fa-arrow-circle-left fa-1x\"></i></button>\r\n            </div>\r\n          <div class=\"col-10 \">\r\n           <span>To do list on {`${arr[0]}-${monthname}`}</span>\r\n           </div>\r\n           <div class=\"col-1\">\r\n          <button class=\"btn btn-warning\">Logout</button>\r\n            </div>\r\n        </div>\r\n        <button class=\"addbutton btn btn-primary\" id=\"addbutton\" onClick={() => setModalShow(true)}><i class=\"fas fa-plus-circle fa-2x\"></i></button>\r\n        <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        id={id}\r\n        today={today}\r\n      />\r\n        \r\n    </div>\r\n    <div class=\"taskbackground\">\r\n    <table class=\"table task\">\r\n    <thead>\r\n    <tr class=\"task\">\r\n      <th class=\"task time\" scope=\"col\">Time</th>\r\n      <th class=\"task name\" scope=\"col\">Task Name</th>\r\n      <th class=\"task des\" scope=\"col\">Description</th>\r\n      <th class=\"task time\" scope=\"col\">Status</th>\r\n      <th class=\"task action\" scope=\"col\">Action</th>\r\n    </tr> \r\n  </thead>\r\n  <tbody>{\r\n    tasklist.map((i)=>{\r\n\r\n    return <tr class=\"task \">\r\n      <td class=\"task taskdata\">{i.TaskTime}</td>\r\n      <td class=\"task taskdata\">{i.Taskname}</td>\r\n      <td class=\"task taskdata\">{i.Taskdescription}</td>\r\n      {\r\n      i.Completed==false?<td class=\"task taskdata\"style={{color:`yellow`}}>waiting</td>:<td class=\"task taskdata\"style={{color:`Green`}}>done</td>\r\n       }\r\n      <td class=\"task taskdata\"><button class=\"btn btn-danger bigger\" onClick={\r\n        async()=>{\r\n          await Deletetask(i._id);\r\n          let obj = {\r\n            date : +arr[0],\r\n            month: arr[1]\r\n          }\r\n          let response = await Gettask(arr[2],obj)\r\n          updatetasklist([...response.data]);\r\n        }\r\n      }><i class=\"far fa-calendar-times\"></i></button><button class=\"btn btn-primary bigger\" onClick={\r\n        ()=>{seteditModalShow(true)}\r\n      }><i class=\"far fa-edit\"></i><MyVerticallyCenteredEditModal\r\n      show={editmodalShow}\r\n      onHide={() => seteditModalShow(false)}\r\n      data={i}\r\n      today={today}\r\n    /></button></td>\r\n    </tr>\r\n    })}\r\n  </tbody>\r\n</table>\r\n</div>\r\n</>\r\n}\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n  let task = useContext(TaskContext);\r\n  const[tname,updatetname] = useState(\"\");\r\n  const[tdes,updatetdes] = useState(\"\");\r\n  const[tt,updatett] = useState(\"\"); \r\n  const[message,updatemessage] = useState(\"Press Esc to exit without saving\");\r\n  return (<Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Task\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form onSubmit={\r\n         async (e)=>{\r\n              e.preventDefault();\r\n              //console.log(props.today);\r\n              if(props.today==true)\r\n              {\r\n                let date = new Date();\r\n                let currenthour = date.getHours();\r\n                let currentmin = date.getMinutes();\r\n                //console.log(tt);\r\n                let array = tt.split(\":\");\r\n                \r\n                if(+array[0]>=currenthour)\r\n                 {\r\n                    if(+array[0]>currenthour)\r\n                    {\r\n                      let obj = \r\n                      {\r\n                        Taskname :tname,\r\n                        Taskdescription:tdes,\r\n                        TaskTime:tt,\r\n                        Taskmonth: task.userdata[1],\r\n                        Taskdate : +task.userdata[0],\r\n                        Userid : task.userdata[2],\r\n                        Completed: false\r\n                      }\r\n                     \r\n                      await Addtask(obj);\r\n                      updatetname(\"\");\r\n                      updatett(\"\");\r\n                      updatetdes(\"\");\r\n                      props.onHide();\r\n                    }\r\n                 else\r\n                 { \r\n                   if(currenthour==array[0]&&array[1]>=currentmin+10)\r\n                   {\r\n                    let obj = \r\n                    {\r\n                      Taskname :tname,\r\n                      Taskdescription:tdes,\r\n                      TaskTime:tt,\r\n                      Taskmonth: task.userdata[1],\r\n                      Taskdate : +task.userdata[0],\r\n                      Userid : task.userdata[2],\r\n                      Completed: false\r\n                    }\r\n                   \r\n                    await Addtask(obj);\r\n                    updatetname(\"\");\r\n                    updatett(\"\");\r\n                    updatetdes(\"\");\r\n                    props.onHide();\r\n                   }\r\n                   else\r\n                   {\r\n                   updatemessage(\"Please register atleast a 10mins before\");\r\n                   updatett(\"\");}\r\n                 }\r\n              }else{\r\n                let obj = \r\n                {\r\n                  Taskname :tname,\r\n                  Taskdescription:tdes,\r\n                  TaskTime:tt,\r\n                  Taskmonth: task.userdata[1],\r\n                  Taskdate : +task.userdata[0],\r\n                  Userid : task.userdata[2],\r\n                  Completed: false\r\n                }\r\n               \r\n                await Addtask(obj);\r\n                updatetname(\"\");\r\n                updatett(\"\");\r\n                updatetdes(\"\");\r\n                props.onHide();\r\n          }}\r\n        }}>\r\n        <div class=\"container-fluid row col-12\">\r\n     <label for=\"taskname\" class=\"form-label\">Task Name</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"taskname\" required value={tname} onChange={\r\n        (e)=>{updatetname(e.target.value)}\r\n      } />\r\n     </div><br/>\r\n     <div class=\"container-fluid row col-12\">\r\n     <label for=\"description\" class=\"form-label\">Description</label>\r\n     <textarea class=\"form-control\" id=\"description\" rows=\"2\" required value={tdes} onChange={(e)=>{updatetdes(e.target.value)}}></textarea>\r\n     </div><br/>\r\n     <div class=\"container-fluid row  col-4\">\r\n     <label for=\"time\" class=\"form-label\">Time-(HH:mm-AM/PM)</label>\r\n     <input type=\"time\" class=\"form-control form-sm\" min=\"00:00\" max=\"23:59\" id=\"time\" required value={tt} onChange={\r\n       (e)=>{updatett(e.target.value)}\r\n     } />\r\n     </div><br/>\r\n     <div class=\"container-fluid row  col-12\">\r\n     <span style={{color:\"blue\"}}> {message}</span>\r\n     </div><br/>\r\n        <Modal.Footer>\r\n        <button class=\"btn btn-primary\" type=\"submit\">Submit</button></Modal.Footer>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction MyVerticallyCenteredEditModal(props) {\r\n  \r\n  const[tname,updatetname] = useState(props.data.Taskname);\r\n  const[tdes,updatetdes] = useState(props.data.Taskdescription);\r\n  const[tt,updatett] = useState(props.data.TaskTime); \r\n  const[message,updatemessage] = useState(\"Press Esc to exit without saving\");\r\n  return (<Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Task \r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        \r\n        <form onSubmit={\r\n         async (e)=>{\r\n              e.preventDefault();\r\n              if(props.today==true)\r\n              {\r\n                let date = new Date();\r\n                let currenthour = date.getHours();\r\n                let currentmin = date.getMinutes();\r\n                //console.log(tt);\r\n                let array = tt.split(\":\");\r\n                \r\n                if(+array[0]>=currenthour)\r\n                 {\r\n                    if(+array[0]>currenthour)\r\n                    {\r\n                      let obj = \r\n                      {\r\n                        Taskname :tname,\r\n                        Taskdescription:tdes,\r\n                        TaskTime:tt,\r\n                      }\r\n                      \r\n                     let response =  await Updatetask(props.data._id,obj);\r\n                     console.log(response.data);\r\n                      updatetname(\"\");\r\n                      updatett(\"\");\r\n                      updatetdes(\"\");\r\n                      updatemessage(\"\");\r\n                      props.onHide();\r\n                      window.location.reload(false);\r\n                    }\r\n                 else\r\n                 { \r\n                   if(currenthour==array[0]&&array[1]>=currentmin+10)\r\n                   {\r\n                    let obj = \r\n                    {\r\n                      Taskname :tname,\r\n                      Taskdescription:tdes,\r\n                      TaskTime:tt,\r\n                    }\r\n                    \r\n                   let response =  await Updatetask(props.data._id,obj);\r\n                   console.log(response.data);\r\n                    updatetname(\"\");\r\n                    updatett(\"\");\r\n                    updatetdes(\"\");\r\n                    updatemessage(\"\");\r\n                    props.onHide();\r\n                    window.location.reload(false);\r\n                   }\r\n                   else\r\n                   {\r\n                   updatemessage(\"Please register atleast a 10mins before\");\r\n                   updatett(\"\");}\r\n                 }\r\n              }\r\n              else{\r\n              let obj = \r\n              {\r\n                Taskname :tname,\r\n                Taskdescription:tdes,\r\n                TaskTime:tt,\r\n              }\r\n              \r\n             let response =  await Updatetask(props.data._id,obj);\r\n             console.log(response.data);\r\n              updatetname(\"\");\r\n              updatett(\"\");\r\n              updatetdes(\"\");\r\n              updatemessage(\"\");\r\n              props.onHide();\r\n              window.location.reload(false);\r\n          }}\r\n        }}>\r\n        <div class=\"container-fluid row col-12\">\r\n     <label for=\"taskname\" class=\"form-label\">Task Name</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"taskname\" required value={tname} onChange={\r\n        (e)=>{updatetname(e.target.value)}\r\n      } />\r\n     </div><br/>\r\n     <div class=\"container-fluid row col-12\">\r\n     <label for=\"description\" class=\"form-label\">Description</label>\r\n     <textarea class=\"form-control\" id=\"description\" rows=\"2\" required value={tdes} onChange={(e)=>{updatetdes(e.target.value)}}></textarea>\r\n     </div><br/>\r\n     <div class=\"container-fluid row  col-4\">\r\n     <label for=\"time\" class=\"form-label\">Time-(HH:mm-AM/PM)</label>\r\n     <input type=\"time\" class=\"form-control form-sm\" min=\"00:00\" max=\"23:59\" id=\"time\" required value={tt} onChange={\r\n       (e)=>{updatett(e.target.value)}\r\n     } />\r\n     </div><br/>\r\n     <div class=\"container-fluid row  col-12\">\r\n     <span style={{color:\"blue\"}}> {message}</span>\r\n     </div><br/>\r\n        <Modal.Footer>\r\n       \r\n        <button class=\"btn btn-primary\" type=\"submit\">save</button>\r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\nfunction convertToNum(Month)\r\n{\r\n  switch(Month)\r\n  {\r\n      case \"January\" : \r\n      {\r\n          return 0;\r\n      }\r\n      case \"Febuary\" : \r\n      {\r\n          return 1 ;\r\n      }\r\n      case \"March\" :\r\n      {\r\n          return 2\r\n      }\r\n      case \"April\" :\r\n      {\r\n          return 3\r\n      }\r\n      case \"May\" :\r\n      {\r\n          return 4\r\n      }\r\n      case \"June\" :\r\n        {\r\n            return 5\r\n        }\r\n      case \"July\":\r\n        {\r\n            return 6\r\n        }\r\n        case \"August\":\r\n        {\r\n            return 7\r\n        } \r\n        case \"September\":\r\n        {\r\n            return 8\r\n        } \r\n        case \"October\":\r\n        {\r\n            return 9\r\n        } \r\n        case \"November\":\r\n        {\r\n            return 10\r\n        } \r\n        case \"December\":\r\n        {\r\n            return 11\r\n        } \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}