[{"D:\\Fullstackproject\\todolist\\src\\index.js":"1","D:\\Fullstackproject\\todolist\\src\\reportWebVitals.js":"2","D:\\Fullstackproject\\todolist\\src\\App.js":"3","D:\\Fullstackproject\\todolist\\src\\calender.js":"4","D:\\Fullstackproject\\todolist\\src\\task.js":"5","D:\\Fullstackproject\\todolist\\src\\login.js":"6","D:\\Fullstackproject\\todolist\\src\\register.js":"7","D:\\Fullstackproject\\todolist\\src\\forgetpassword.js":"8","D:\\Fullstackproject\\todolist\\src\\api.js":"9","D:\\Fullstackproject\\todolist\\src\\taskcontext.js":"10","D:\\Fullstackproject\\todolist\\src\\Resetpassword.js":"11","D:\\Fullstackproject\\todolist\\src\\Remainder.js":"12","D:\\Fullstackproject\\todolist\\src\\taskdone.js":"13","D:\\Fullstackproject\\todolist\\src\\Alltask.js":"14","D:\\Fullstackproject\\todolist\\src\\Completedtask.js":"15","D:\\Fullstackproject\\todolist\\src\\Pendingtask.js":"16","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\index.js":"17","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\reportWebVitals.js":"18","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\App.js":"19","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\task.js":"20","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\login.js":"21","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\taskcontext.js":"22","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\calender.js":"23","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\Alltask.js":"24","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\taskdone.js":"25","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\register.js":"26","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\Remainder.js":"27","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\Resetpassword.js":"28","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\Pendingtask.js":"29","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\forgetpassword.js":"30","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\Completedtask.js":"31","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\api.js":"32"},{"size":500,"mtime":499162500000,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":1766,"mtime":1620931222838,"results":"36","hashOfConfig":"34"},{"size":8726,"mtime":1620931229304,"results":"37","hashOfConfig":"34"},{"size":14850,"mtime":1620928927155,"results":"38","hashOfConfig":"34"},{"size":3549,"mtime":1620827937506,"results":"39","hashOfConfig":"34"},{"size":4756,"mtime":1620580504461,"results":"40","hashOfConfig":"34"},{"size":2034,"mtime":1620931391714,"results":"41","hashOfConfig":"34"},{"size":1635,"mtime":1620930124836,"results":"42","hashOfConfig":"34"},{"size":332,"mtime":1620642837095,"results":"43","hashOfConfig":"34"},{"size":3303,"mtime":1620912230949,"results":"44","hashOfConfig":"34"},{"size":2307,"mtime":1620826141534,"results":"45","hashOfConfig":"34"},{"size":386,"mtime":1620822110645,"results":"46","hashOfConfig":"34"},{"size":3157,"mtime":1620930841947,"results":"47","hashOfConfig":"34"},{"size":3210,"mtime":1620931067947,"results":"48","hashOfConfig":"34"},{"size":3207,"mtime":1620931212272,"results":"49","hashOfConfig":"34"},{"size":500,"mtime":499162500000,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":499162500000,"results":"52","hashOfConfig":"51"},{"size":1766,"mtime":1620931222838,"results":"53","hashOfConfig":"51"},{"size":14854,"mtime":1621100880249,"results":"54","hashOfConfig":"51"},{"size":3549,"mtime":1620827937506,"results":"55","hashOfConfig":"51"},{"size":332,"mtime":1620642837095,"results":"56","hashOfConfig":"51"},{"size":8726,"mtime":1620931229304,"results":"57","hashOfConfig":"51"},{"size":3157,"mtime":1620930841947,"results":"58","hashOfConfig":"51"},{"size":386,"mtime":1620822110645,"results":"59","hashOfConfig":"51"},{"size":4756,"mtime":1620580504461,"results":"60","hashOfConfig":"51"},{"size":2307,"mtime":1620826141534,"results":"61","hashOfConfig":"51"},{"size":3303,"mtime":1620912230949,"results":"62","hashOfConfig":"51"},{"size":3207,"mtime":1620931212272,"results":"63","hashOfConfig":"51"},{"size":2034,"mtime":1620931391714,"results":"64","hashOfConfig":"51"},{"size":3210,"mtime":1620931067947,"results":"65","hashOfConfig":"51"},{"size":1789,"mtime":1620975390023,"results":"66","hashOfConfig":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1110ex9",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lxudmq",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Fullstackproject\\todolist\\src\\index.js",[],["143","144"],"D:\\Fullstackproject\\todolist\\src\\reportWebVitals.js",[],"D:\\Fullstackproject\\todolist\\src\\App.js",["145","146","147"],"D:\\Fullstackproject\\todolist\\src\\calender.js",["148","149","150","151","152","153","154","155","156"],"D:\\Fullstackproject\\todolist\\src\\task.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"D:\\Fullstackproject\\todolist\\src\\login.js",["172"],"import React, { useState } from \"react\";\r\nimport Background from \"./img/1489353.jpg\";\r\nimport \"./App.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { loginuser } from \"./api\";\r\n\r\n\r\n\r\nexport default function Login()\r\n{    \r\n    let history = useHistory();\r\n    const[type,updatetype] = useState(\"password\");\r\n    const[email,updateemail] = useState(\"\");\r\n    const[password,updatepassword] = useState(\"\");\r\n    const[message,updatemessage] = useState(\"\");\r\n\r\n    return <div style={{\r\n        backgroundImage: `url(${Background})`,\r\n        backgroundSize: \"cover\",\r\n        height: \"100vh\",\r\n        color: \"#f5f5f5\"\r\n      }}\r\n     class=\"container-fluid row\">\r\n        <div class=\"col-4\">\r\n            <div class=\"login\">\r\n          <form onSubmit={\r\n              async(e)=>{\r\n                  e.preventDefault();\r\n                  let obj = {email,password}\r\n                  let response = await loginuser(obj)\r\n                  if(response.data.message===\"Allowed\")\r\n                  {\r\n                      updateemail(\"\")\r\n                      updatepassword(\"\");\r\n                      window.localStorage.setItem(\"app_token1\",response.data.token);\r\n                      let temp = \"/calender/\"+response.data.userid;\r\n                      history.push(temp);\r\n                  }\r\n                  else\r\n                  {\r\n                    updateemail(\"\")\r\n                    updatepassword(\"\");  \r\n                    updatemessage(response.data.message);\r\n                  }\r\n              }\r\n          }>\r\n          <div class=\"container-fluid row\">\r\n              <div class=\"col-12\">\r\n          <label for=\"exampleFormControlInput1\" class=\"form-label label\">Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" required value={email} onChange={\r\n              (e)=>{updateemail(e.target.value)}\r\n          }/>\r\n          </div></div><br/>\r\n          <div class=\"container-fluid row \">\r\n              <div class=\"col-12\">\r\n              <label for=\"password\" class=\"form-label label\">Password</label>\r\n               <input type={type} class=\"form-control\" id=\"password\" required value={password} onChange={(e)=>{updatepassword(e.target.value)}}/>\r\n              </div>\r\n              <div class=\"co1-12\">\r\n               <input type=\"checkbox\" id=\"showpassword\" name=\"showpassword\" value=\"password\" onChange={\r\n                   ()=>{\r\n                     if(type==\"password\")\r\n                     {\r\n                         updatetype(\"text\")\r\n                     }\r\n                     else\r\n                     {\r\n                        updatetype(\"password\")\r\n                     }\r\n                   }\r\n               } />\r\n               <label for=\"showpassword\">&nbsp; Show Password</label><br/>\r\n              </div>\r\n          </div><br/>\r\n          <div class=\"container-fluid row \">\r\n              <div class=\"col-12\">\r\n          <Link to =\"/forgetpassword\"><span>Forget Password</span></Link>&nbsp;&nbsp;<Link to=\"/reg\"><span>Register</span></Link></div>\r\n          </div>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\" style={{color:\"red\"}}>\r\n          {message}\r\n           </div>\r\n          </div><br/>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n           </div>\r\n          </div>\r\n          </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n}","D:\\Fullstackproject\\todolist\\src\\register.js",["173"],"import React, { useState } from \"react\";\r\nimport Background from \"./img/To-do-List.jpg\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { RegisterUser } from \"./api\";\r\n\r\n\r\n\r\n\r\nexport default function Registry()\r\n{   \r\n    let history = useHistory();\r\n    const[type,updatetype] = useState(\"password\");\r\n    const[message,updatemessage] = useState(\"\");\r\n    const[name,updatename] = useState(\"\");\r\n    const[email,updateemail] = useState(\"\");\r\n    const[password,updatepassword] = useState(\"\");\r\n    const[cpassword,updatecpassword] = useState(\"\");\r\n    const[color,updatecolor] = useState(\"Red\");\r\n    return <div style={{\r\n        backgroundImage: `url(${Background})`,\r\n        backgroundSize: \"cover\",\r\n        height: \"100vh\",\r\n        color: \"#f5f5f5\"\r\n      }}\r\n     class=\"container-fluid row\">\r\n        <div class=\"offset-5 col-4\">\r\n            <div class=\"register\">\r\n          <form onSubmit ={\r\n           async   (e)=>{\r\n                  e.preventDefault();\r\n                  if(password===cpassword)\r\n                  {\r\n                  let obj = {\r\n                      Name : name,\r\n                      email :email,\r\n                      password:password  \r\n                  }\r\n                  let response = await RegisterUser(obj);\r\n                  if(response.data.message===\"Registered\")\r\n                  {\r\n                      updatecolor(\"green\");\r\n                      updatemessage(response.data.message);\r\n                      updatename(\"\");\r\n                      updatepassword(\"\");\r\n                      updateemail(\"\");\r\n                      updatecpassword(\"\");\r\n                      history.push(\"/\");\r\n                  }\r\n                  else\r\n                  {\r\n                    updatemessage(response.data.message);\r\n                    updatename(\"\");\r\n                    updatepassword(\"\");\r\n                    updateemail(\"\");\r\n                    updatecpassword(\"\");\r\n                  }\r\n                  }\r\n                  else\r\n                  {\r\n                      updatemessage(\"Password must be identical\")\r\n                  }\r\n              }\r\n          }>\r\n          <div class=\"container-fluid row\">\r\n          <div class=\"col-12\">\r\n          <label for=\"name\" class=\"form-label label\">Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"name\" value={name} required onChange={\r\n              (e)=>{\r\n                  updatename(e.target.value);\r\n                  \r\n              }\r\n          }/>\r\n          </div></div><br/>\r\n          <div class=\"container-fluid row\">\r\n              <div class=\"col-12\">\r\n          <label for=\"exampleFormControlInput1\" class=\"form-label label\">Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" value={email} required onChange={\r\n              (e)=>{updateemail(e.target.value)}\r\n          }/>\r\n          </div></div><br/>\r\n          <div class=\"container-fluid row \">\r\n              <div class=\"col-12\">\r\n              <label for=\"password\" class=\"form-label label\">Password</label>\r\n               <input type={type} class=\"form-control\" id=\"password\" required value={password} onChange={(e)=>{updatepassword(e.target.value)}} minLength=\"8\"/>\r\n              </div>\r\n              </div><br/>\r\n          <div class=\"container-fluid row \">\r\n              <div class=\"col-12\">\r\n              <label for=\"password\" class=\"form-label label\">Confirm Password</label>\r\n               <input type={type} class=\"form-control\" id=\"password\" required value={cpassword} onChange={(e)=>{updatecpassword(e.target.value)}} minLength=\"8\"/>\r\n              </div><br/>\r\n              <div class=\"co1-12\">\r\n               <input type=\"checkbox\" id=\"showpassword\" name=\"showpassword\" value=\"password\" onChange={\r\n                   ()=>{\r\n                     if(type==\"password\")\r\n                     {\r\n                         updatetype(\"text\")\r\n                     }\r\n                     else\r\n                     {\r\n                        updatetype(\"password\")\r\n                     }\r\n                   }\r\n               }/>\r\n               <label for=\"showpassword\">&nbsp; Show Password</label><br/>\r\n              </div>\r\n          </div><br/>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\" style={{color:`${color}`}}>\r\n           {message}\r\n           </div>\r\n          </div><br/>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Register</button>\r\n           </div>\r\n          </div>\r\n         \r\n          </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n}","D:\\Fullstackproject\\todolist\\src\\forgetpassword.js",["174","175"],"D:\\Fullstackproject\\todolist\\src\\api.js",[],"D:\\Fullstackproject\\todolist\\src\\taskcontext.js",[],"D:\\Fullstackproject\\todolist\\src\\Resetpassword.js",["176","177"],"D:\\Fullstackproject\\todolist\\src\\Remainder.js",["178","179","180","181","182"],"import React, { useEffect, useState } from \"react\"; \r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Deletetask, Getsingletask, Updatesingletask } from \"./api\";\r\n\r\nexport default function Remainder()\r\n{   \r\n   const {id} = useParams();\r\n   const history = useHistory();\r\n   const [taskname,updatetaskname] = useState(\"\");\r\n   const [taskdes,updatetaskdes] = useState(\"\");\r\n   const [taskstatus,updatetaskstatus] = useState(false);\r\n   const [tt,updatett] = useState(\"\");\r\n    useEffect(async()=>{\r\n      let result = await Getsingletask(id);\r\n      console.log(result.data);\r\n      if(result.data.available==true)\r\n      {\r\n      if(result.data.Completed==true)\r\n      {\r\n        history.push(\"/taskdone\");\r\n      }\r\n      else\r\n      {\r\n        updatetaskname(result.data.Taskname);\r\n        updatetaskdes(result.data.Taskdescription);\r\n        updatett(result.data.TaskTime);\r\n        updatetaskstatus(result.data.Completed);\r\n      }\r\n    }else\r\n    {\r\n      history.push(\"/\")\r\n    }\r\n    },[])\r\n   return <div class=\"reset\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class='offset-3 col-7'>\r\n            <div class=\"textdes\">\r\n           <span class=\"design-text\">   Taskname : </span> {taskname} <br/><br/>\r\n            <span class=\"design-text\">  Taskdescription:</span> {taskdes} <br/><br/>\r\n            <span class=\"design-text\">   Tasktime :</span> {tt}<br/><br/>\r\n            {taskstatus==false?<><span class=\"design-text\">Status :</span><span>Yet to Complete</span></>:<><span class=\"design-text\">Status :</span><span style={{color:\"Green\"}}>Task Completed</span></>}\r\n            <br/><br/>\r\n            <div className=\"container-fluid row \">\r\n              <div class=\"col-6\">\r\n            <button class=\"btn btn-danger\" onClick={async()=>{\r\n              await Deletetask(id);\r\n              history.push(\"/\");\r\n            }}>Cancel Event</button></div><div className=\"col-6\"><button class=\"btn btn-success\" onClick={\r\n              async()=>{\r\n                 await Updatesingletask(id,{Completed:true})\r\n                 history.push(\"/taskdone\");\r\n              }\r\n            }>Task done</button> \r\n              </div>\r\n              </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        </div>    \r\n     </div> \r\n}","D:\\Fullstackproject\\todolist\\src\\taskdone.js",[],"D:\\Fullstackproject\\todolist\\src\\Alltask.js",["183","184","185","186"],"D:\\Fullstackproject\\todolist\\src\\Completedtask.js",["187","188","189","190","191","192"],"D:\\Fullstackproject\\todolist\\src\\Pendingtask.js",["193","194","195","196","197","198"],"C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\index.js",[],"C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\App.js",["199","200","201"],"import logo from './logo.svg';\nimport './App.css';\nimport Calender from './calender';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Task from './task';\nimport Login from './login';\nimport Registry from './register';\nimport Forgetpassword from './forgetpassword';\nimport { TaskDetails } from './taskcontext';\nimport { Resetpassword } from './Resetpassword';\nimport Remainder from './Remainder';\nimport taskdone from './taskdone';\nimport Taskdone from './taskdone';\nimport Alltask from './Alltask';\nimport Completedtask from './Completedtask';\nimport Pendingtask from './Pendingtask';\n\n\nfunction App() {\n  return (\n    <div >\n       <TaskDetails>\n        <Router>\n        <Switch>\n       <Route path=\"/\" exact>\n       <Login></Login>\n       </Route>\n       <Route path=\"/reg\" exact>\n       <Registry></Registry>\n       </Route>\n       <Route path=\"/task/:id\">\n         <Task></Task>\n       </Route>\n       <Route path=\"/forgetpassword\">\n         <Forgetpassword></Forgetpassword>\n       </Route>\n       <Route path=\"/calender/:id\" exact>\n       <Calender></Calender>\n       </Route>\n       <Route path=\"/resetpassword/:id\" exact>\n       <Resetpassword></Resetpassword></Route>\n       <Route path=\"/remainder/:id\" exact>\n        <Remainder></Remainder>\n       </Route>\n       <Route path=\"/taskdone\" exact>\n        <Taskdone></Taskdone>\n       </Route>\n       <Route path=\"/alltask/:id\" exact>\n        <Alltask></Alltask>\n       </Route>\n       <Route path=\"/c-task/:id\" exact>\n        <Completedtask></Completedtask>\n       </Route>\n       <Route path=\"/p-task/:id\" exact>\n        <Pendingtask></Pendingtask>\n       </Route>\n       </Switch>\n      </Router>\n      </TaskDetails>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\task.js",["202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button,Modal } from 'react-bootstrap';\r\nimport { useHistory, useParams } from \"react-router\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { Addtask, Deletetask, Gettask ,Updatetask } from \"./api\";\r\nimport TaskContext from \"./taskcontext\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function Task()\r\n{   \r\n    let history = useHistory();\r\n    let task = useContext(TaskContext);\r\n    let {id} = useParams();\r\n    const[tasklist,updatetasklist] = useState([]);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [editmodalShow, seteditModalShow] = React.useState(false);\r\n    let [today,updatetoday] = useState(false);\r\n    let arr = id.split(\"-\");\r\n    let monthname = arr[1];\r\n    arr[1] =convertToNum(monthname);\r\n    let calenderlink = \"/calender/\"+arr[2];\r\n   // console.log(calenderlink)\r\n    useEffect( async()=>{\r\n      task.updateuserdata([...arr]); \r\n      let obj = {\r\n        date : +arr[0],\r\n        month: arr[1]\r\n      }\r\n      let response = await Gettask(arr[2],obj)\r\n      console.log(response.data);\r\n      updatetasklist([...response.data]);\r\n      let date = new Date();\r\n      let currentdate = date.getDate();\r\n      let currentmonth = date.getMonth();\r\n     // console.log(currentdate,currentmonth,+arr[0],arr[1]);\r\n      if(currentmonth>arr[1])\r\n      {\r\n          document.getElementById(\"addbutton\").style.visibility=\"hidden\";\r\n          console.log(\"button\" ,document.getElementById(\"addbutton\"));\r\n      }\r\n      else\r\n      {\r\n        if(currentmonth==arr[1]&&currentdate>+arr[0])\r\n        {\r\n          document.getElementById(\"addbutton\").style.visibility=\"hidden\";\r\n        }\r\n        if(currentmonth==arr[1]&&currentdate==arr[0])\r\n        {\r\n         updatetoday(true);\r\n        // console.log(\"today\",today);\r\n         \r\n        }\r\n      }\r\n    },[])\r\n    useEffect( async()=>{\r\n      task.updateuserdata([...arr]); \r\n      let obj = {\r\n        date : +arr[0],\r\n        month: arr[1]\r\n      }\r\n      let response = await Gettask(arr[2],obj)\r\n      updatetasklist([...response.data]);\r\n      \r\n    },[modalShow,editmodalShow])\r\n    return<> \r\n    <div class=\"container-fluid bg-primary\">\r\n        <div class=\"row  taskheader\">\r\n          \r\n          <div class=\"col-1\">\r\n          <button class=\"btn btn-warning\" onClick={()=>{history.push(calenderlink)}}><i class=\"fas fa-arrow-circle-left fa-1x\"></i></button>\r\n            </div>\r\n          <div class=\"col-10 \">\r\n           <span>To do list on {`${arr[0]}-${monthname}`}</span>\r\n           </div>\r\n           <div class=\"col-1\">\r\n          <button class=\"btn btn-warning\" onClick={ ()=>{\r\n             window.localStorage.removeItem(\"app_token1\");\r\n             history.push(\"/\")\r\n         }}>Logout</button>\r\n            </div>\r\n        </div>\r\n        <button class=\"addbutton btn btn-primary\" id=\"addbutton\" onClick={() => setModalShow(true)}><i class=\"fas fa-plus-circle fa-2x\"></i></button>\r\n        <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        id={id}\r\n        today={today}\r\n      />\r\n        \r\n    </div>\r\n    <div class=\"taskbackground\">\r\n    <table class=\"table task\">\r\n    <thead>\r\n    <tr class=\"task\">\r\n      <th class=\"task time\" scope=\"col\">Time</th>\r\n      <th class=\"task name\" scope=\"col\">Task Name</th>\r\n      <th class=\"task des\" scope=\"col\">Description</th>\r\n      <th class=\"task time\" scope=\"col\">Status</th>\r\n      <th class=\"task action\" scope=\"col\">Action</th>\r\n    </tr> \r\n  </thead>\r\n  <tbody>{\r\n    tasklist.map((i)=>{\r\n\r\n    return <tr class=\"task \">\r\n      <td class=\"task taskdata\">{i.TaskTime}</td>\r\n      <td class=\"task taskdata\">{i.Taskname}</td>\r\n      <td class=\"task taskdata\">{i.Taskdescription}</td>\r\n      {\r\n      i.Completed==false?<td class=\"task taskdata\"style={{color:`black`}}>waiting</td>:<td class=\"task taskdata\"style={{color:`Green`}}>done</td>\r\n       }\r\n      <td class=\"task taskdata\"><button class=\"btn btn-danger bigger\" onClick={\r\n        async()=>{\r\n          await Deletetask(i._id);\r\n          let obj = {\r\n            date : +arr[0],\r\n            month: arr[1]\r\n          }\r\n          let response = await Gettask(arr[2],obj)\r\n          updatetasklist([...response.data]);\r\n        }\r\n      }><i class=\"far fa-calendar-times\"></i></button><button class=\"btn btn-primary bigger\" onClick={\r\n        ()=>{seteditModalShow(true)}\r\n      }><i class=\"far fa-edit\"></i><MyVerticallyCenteredEditModal\r\n      show={editmodalShow}\r\n      onHide={() => seteditModalShow(false)}\r\n      data={i}\r\n      today={today}\r\n    /></button></td>\r\n    </tr>\r\n    })}\r\n  </tbody>\r\n</table>\r\n</div>\r\n</>\r\n}\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n  let task = useContext(TaskContext);\r\n  const[tname,updatetname] = useState(\"\");\r\n  const[tdes,updatetdes] = useState(\"\");\r\n  const[tt,updatett] = useState(\"\"); \r\n  const[message,updatemessage] = useState(\"Press Esc to exit without saving\");\r\n  return (<Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Task\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form onSubmit={\r\n         async (e)=>{\r\n              e.preventDefault();\r\n              //console.log(props.today);\r\n              if(props.today==true)\r\n              {\r\n                let date = new Date();\r\n                let currenthour = date.getHours();\r\n                let currentmin = date.getMinutes();\r\n                //console.log(tt);\r\n                let array = tt.split(\":\");\r\n                console.log(+array[0],currenthour);\r\n                if(+array[0]>=currenthour)\r\n                 {\r\n                    if(+array[0]>currenthour)\r\n                    {\r\n                      let obj = \r\n                      {\r\n                        Taskname :tname,\r\n                        Taskdescription:tdes,\r\n                        TaskTime:tt,\r\n                        Taskmonth: task.userdata[1],\r\n                        Taskdate : +task.userdata[0],\r\n                        Userid : task.userdata[2],\r\n                        Completed: false\r\n                      }\r\n                     \r\n                      await Addtask(obj);\r\n                      updatetname(\"\");\r\n                      updatett(\"\");\r\n                      updatetdes(\"\");\r\n                      props.onHide();\r\n                    }\r\n                 else\r\n                 { \r\n                   if(currenthour==array[0]&&array[1]>=currentmin+20)\r\n                   {\r\n                    let obj = \r\n                    {\r\n                      Taskname :tname,\r\n                      Taskdescription:tdes,\r\n                      TaskTime:tt,\r\n                      Taskmonth: task.userdata[1],\r\n                      Taskdate : +task.userdata[0],\r\n                      Userid : task.userdata[2],\r\n                      Completed: false\r\n                    }\r\n                   \r\n                    await Addtask(obj);\r\n                    updatetname(\"\");\r\n                    updatett(\"\");\r\n                    updatetdes(\"\");\r\n                    props.onHide();\r\n                   }\r\n                   else\r\n                   {\r\n                   updatemessage(\"Please register atleast a 20-mins before\");\r\n                   updatett(\"\");}\r\n                 }\r\n              }else{\r\n                updatemessage(\"Please register atleast a 20-mins before\");\r\n                   updatett(\"\");\r\n          }}\r\n          else\r\n          {\r\n            let obj = \r\n                {\r\n                  Taskname :tname,\r\n                  Taskdescription:tdes,\r\n                  TaskTime:tt,\r\n                  Taskmonth: task.userdata[1],\r\n                  Taskdate : +task.userdata[0],\r\n                  Userid : task.userdata[2],\r\n                  Completed: false\r\n                }\r\n               \r\n                await Addtask(obj);\r\n                updatetname(\"\");\r\n                updatett(\"\");\r\n                updatetdes(\"\");\r\n                props.onHide();\r\n          }\r\n        }}>\r\n        <div class=\"container-fluid row col-12\">\r\n     <label for=\"taskname\" class=\"form-label\">Task Name</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"taskname\" required value={tname} onChange={\r\n        (e)=>{updatetname(e.target.value)}\r\n      } />\r\n     </div><br/>\r\n     <div class=\"container-fluid row col-12\">\r\n     <label for=\"description\" class=\"form-label\">Description</label>\r\n     <textarea class=\"form-control\" id=\"description\" rows=\"2\" required value={tdes} onChange={(e)=>{updatetdes(e.target.value)}}></textarea>\r\n     </div><br/>\r\n     <div class=\"container-fluid row  col-4\">\r\n     <label for=\"time\" class=\"form-label\">Time-(HH:mm-AM/PM)</label>\r\n     <input type=\"time\" class=\"form-control form-sm\" min=\"00:00\" max=\"23:59\" id=\"time\" required value={tt} onChange={\r\n       (e)=>{updatett(e.target.value)}\r\n     } />\r\n     </div><br/>\r\n     <div class=\"container-fluid row  col-12\">\r\n     <span style={{color:\"blue\"}}> {message}</span>\r\n     </div><br/>\r\n        <Modal.Footer>\r\n        <button class=\"btn btn-primary\" type=\"submit\">Submit</button></Modal.Footer>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction MyVerticallyCenteredEditModal(props) {\r\n  \r\n  const[tname,updatetname] = useState(props.data.Taskname);\r\n  const[tdes,updatetdes] = useState(props.data.Taskdescription);\r\n  const[tt,updatett] = useState(props.data.TaskTime); \r\n  const[message,updatemessage] = useState(\"Press Esc to exit without saving\");\r\n  return (<Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Task \r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        \r\n        <form onSubmit={\r\n         async (e)=>{\r\n              e.preventDefault();\r\n              if(props.today==true)\r\n              {\r\n                let date = new Date();\r\n                let currenthour = date.getHours();\r\n                let currentmin = date.getMinutes();\r\n                //console.log(tt);\r\n                let array = tt.split(\":\");\r\n                \r\n                if(+array[0]>=currenthour)\r\n                 {\r\n                    if(+array[0]>currenthour)\r\n                    {\r\n                      let obj = \r\n                      {\r\n                        Taskname :tname,\r\n                        Taskdescription:tdes,\r\n                        TaskTime:tt,\r\n                        Completed:false\r\n                      }\r\n                      \r\n                     let response =  await Updatetask(props.data._id,obj);\r\n                     console.log(response.data);\r\n                      updatetname(\"\");\r\n                      updatett(\"\");\r\n                      updatetdes(\"\");\r\n                      updatemessage(\"\");\r\n                      props.onHide();\r\n                      window.location.reload(false);\r\n                    }\r\n                 else\r\n                 { \r\n                   if(currenthour==array[0]&&array[1]>=currentmin+20)\r\n                   {\r\n                    let obj = \r\n                    {\r\n                      Taskname :tname,\r\n                      Taskdescription:tdes,\r\n                      TaskTime:tt,\r\n                      Completed:false\r\n                    }\r\n                    \r\n                   let response =  await Updatetask(props.data._id,obj);\r\n                   console.log(response.data);\r\n                    updatetname(\"\");\r\n                    updatett(\"\");\r\n                    updatetdes(\"\");\r\n                    updatemessage(\"\");\r\n                    props.onHide();\r\n                    window.location.reload(false);\r\n                   }\r\n                   else\r\n                   {\r\n                   updatemessage(\"Please register atleast a 20-mins before\");\r\n                   updatett(\"\");}\r\n                 }\r\n              }\r\n              else{\r\n                updatemessage(\"Please register atleast a 20-mins before\");\r\n                updatett(\"\");\r\n          }}\r\n          else\r\n          {\r\n            let obj = \r\n            {\r\n              Taskname :tname,\r\n              Taskdescription:tdes,\r\n              TaskTime:tt,\r\n              Completed:false\r\n            }\r\n            \r\n           let response =  await Updatetask(props.data._id,obj);\r\n           console.log(response.data);\r\n            updatetname(\"\");\r\n            updatett(\"\");\r\n            updatetdes(\"\");\r\n            updatemessage(\"\");\r\n            props.onHide();\r\n            window.location.reload(false);\r\n          }\r\n        }}>\r\n        <div class=\"container-fluid row col-12\">\r\n     <label for=\"taskname\" class=\"form-label\">Task Name</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"taskname\" required value={tname} onChange={\r\n        (e)=>{updatetname(e.target.value)}\r\n      } />\r\n     </div><br/>\r\n     <div class=\"container-fluid row col-12\">\r\n     <label for=\"description\" class=\"form-label\">Description</label>\r\n     <textarea class=\"form-control\" id=\"description\" rows=\"2\" required value={tdes} onChange={(e)=>{updatetdes(e.target.value)}}></textarea>\r\n     </div><br/>\r\n     <div class=\"container-fluid row  col-4\">\r\n     <label for=\"time\" class=\"form-label\">Time-(HH:mm-AM/PM)</label>\r\n     <input type=\"time\" class=\"form-control form-sm\" min=\"00:00\" max=\"23:59\" id=\"time\" required value={tt} onChange={\r\n       (e)=>{updatett(e.target.value)}\r\n     } />\r\n     </div><br/>\r\n     <div class=\"container-fluid row  col-12\">\r\n     <span style={{color:\"blue\"}}> {message}</span>\r\n     </div><br/>\r\n        <Modal.Footer>\r\n       \r\n        <button class=\"btn btn-primary\" type=\"submit\">save</button>\r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\nfunction convertToNum(Month)\r\n{\r\n  switch(Month)\r\n  {\r\n      case \"January\" : \r\n      {\r\n          return 0;\r\n      }\r\n      case \"Febuary\" : \r\n      {\r\n          return 1 ;\r\n      }\r\n      case \"March\" :\r\n      {\r\n          return 2\r\n      }\r\n      case \"April\" :\r\n      {\r\n          return 3\r\n      }\r\n      case \"May\" :\r\n      {\r\n          return 4\r\n      }\r\n      case \"June\" :\r\n        {\r\n            return 5\r\n        }\r\n      case \"July\":\r\n        {\r\n            return 6\r\n        }\r\n        case \"August\":\r\n        {\r\n            return 7\r\n        } \r\n        case \"September\":\r\n        {\r\n            return 8\r\n        } \r\n        case \"October\":\r\n        {\r\n            return 9\r\n        } \r\n        case \"November\":\r\n        {\r\n            return 10\r\n        } \r\n        case \"December\":\r\n        {\r\n            return 11\r\n        } \r\n  }\r\n}","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\login.js",["217"],"C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\taskcontext.js",[],"C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\calender.js",["218","219","220","221","222","223","224","225","226"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport Background from \"./img/2016-printable-mockup-gr-1000px-single-CHANCE1.jpg\";\r\nimport { createPopper } from '@popperjs/core';\r\n\r\nexport default function Calender()\r\n{   \r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    let date = new Date();\r\n    let [currentmonth,updatecurrentmonth] = useState(0);\r\n    let[firstline,updatefirstline] = useState([]);\r\n    let[nextline,updatenextline] = useState([]);\r\n    let[month,updatemonth] = useState(\"\");\r\n    let[data,updatedata] = useState(\"\");\r\n    useEffect(()=>{\r\n     let firstday = new Date(date.getFullYear(),date.getMonth(),1).toString().split(\" \")[0];\r\n     let lastday = new Date(date.getFullYear(),date.getMonth()+1,0).toString().split(\" \")[2];   \r\n     updatefirstline([...makeFirstLine(findStartDay(firstday))]);\r\n     updatenextline([...makeNextLine(findStartDay(firstday),+lastday)]);\r\n     updatecurrentmonth(date.getMonth()+1);\r\n     updatemonth(convertToMonth(date.getMonth()+1))\r\n    },[])\r\n    \r\n   \r\n    return <>\r\n     <div style={{\r\n        backgroundImage: `url(${Background})`,\r\n        backgroundSize: \"cover\",\r\n        height: \"100vh\",\r\n        color: \"#f5f5f5\",\r\n       \r\n      }}>\r\n     <div class=\"container-fluid \" >\r\n     <div class=\"row\">\r\n     <div class=\"offset-1 col-1 sidebutton\"><span class=\"alignbutton\"><button class=\"btn\" onClick={\r\n         ()=>{\r\n          if(currentmonth>=2)\r\n          {   \r\n            let temp = currentmonth - 1; \r\n            updatecurrentmonth(temp);\r\n            updatemonth(convertToMonth(temp));\r\n            let firstday = new Date(date.getFullYear(),temp-1,1).toString().split(\" \")[0];\r\n            let lastday = new Date(date.getFullYear(),temp,0).toString().split(\" \")[2];   \r\n            updatefirstline([...makeFirstLine(findStartDay(firstday))]);\r\n            updatenextline([...makeNextLine(findStartDay(firstday),+lastday)]);\r\n          }\r\n         }\r\n     }><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" class=\"bi bi-arrow-left-square\" viewBox=\"0 0 16 16\">\r\n     <path fill-rule=\"evenodd\" d=\"M15 2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2zM0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm11.5 5.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\"/>\r\n   </svg></button></span></div>\r\n     <div class=\"col-8 header\"><span class=\"monthname\">{month}</span></div>   \r\n     <div class=\"col-1 sidebutton\"><span class=\"alignbutton\"><button class=\"btn\" onClick={\r\n         ()=>{\r\n          if(currentmonth<=11)\r\n          {   \r\n          let temp = currentmonth + 1; \r\n          updatecurrentmonth(temp);\r\n          updatemonth(convertToMonth(temp));\r\n          let firstday = new Date(date.getFullYear(),temp-1,1).toString().split(\" \")[0];\r\n          let lastday = new Date(date.getFullYear(),temp,0).toString().split(\" \")[2];   \r\n          updatefirstline([...makeFirstLine(findStartDay(firstday))]);\r\n          updatenextline([...makeNextLine(findStartDay(firstday),+lastday)]);\r\n          }\r\n         }\r\n         \r\n     }><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" class=\"bi bi-arrow-right-square\" viewBox=\"0 0 16 16\">\r\n     <path fill-rule=\"evenodd\" d=\"M15 2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2zM0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm4.5 5.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\"/>\r\n   </svg></button></span></div>\r\n     <div class=\"col-1 sidebutton\"><button class=\"btn btn-primary logout\" onClick={\r\n         ()=>{\r\n             window.localStorage.removeItem(\"app_token1\");\r\n             history.push(\"/\")\r\n         }\r\n     }>Logout</button></div>\r\n    </div>\r\n    </div>    \r\n    <div class=\"container-fluid row\">\r\n    <div class=\"col-1 icon-content\">\r\n        <button type=\"button\" class=\"btn btn-primary tooltipbtn\" data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"List of all task\" onClick={()=>{\r\n            history.push(`/alltask/${id}`);\r\n        }}>\r\n  <i class=\"fas fa-list-ul fa-2x\"></i>\r\n</button>  <br/>\r\n<button type=\"button\" class=\"btn btn-primary tooltipbtn\" data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Completed Task\" onClick={()=>{\r\n            history.push(`/c-task/${id}`);\r\n        }}>\r\n<i class=\"fas fa-calendar-check fa-2x\"></i>\r\n</button> <br/>\r\n<button type=\"button\" class=\"btn btn-primary tooltipbtn\" data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Task yet to complete\"onClick={()=>{\r\n            history.push(`/p-task/${id}`);\r\n        }}>\r\n<i class=\"fas fa-calendar-day fa-2x\"></i>\r\n</button>\r\n            </div>\r\n        <div class=\"col-11\">\r\n    <table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Sun</th>\r\n        <th scope=\"col\">Mon</th>\r\n        <th scope=\"col\">Tue</th>\r\n        <th scope=\"col\">Wed</th>\r\n        <th scope=\"col\">Thu</th>\r\n        <th scope=\"col\">Fri</th>\r\n        <th scope=\"col\">Sat</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n     {  <tr>{ \r\n        firstline.map((i)=>{\r\n            if(i==\" \")\r\n            {\r\n         return<td>{i}</td>\r\n        }\r\n         else\r\n          {\r\n            let trid = \"cell\"+i;   \r\n         return <td id={trid} onClick={\r\n            ()=>{\r\n               let link = \"/task/\"+i+\"-\"+month+\"-\"+id;\r\n               history.push(link);\r\n            }\r\n            }onMouseOver={\r\n                ()=>{\r\n                   document.getElementById(trid).innerHTML = \"+ Task\";\r\n                }\r\n               \r\n             }\r\n             onMouseOut={\r\n                ()=>{\r\n                    document.getElementById(trid).innerHTML = i; \r\n                }         \r\n            }>{i}</td>\r\n          }})}</tr>\r\n     }\r\n     {\r\n         nextline.map((i)=>{\r\n             return <tr>{i.map((j)=>{\r\n                 let temp = j ; \r\n                 let trid = \"cell\"+j;\r\n                 return <td id={trid} onClick={\r\n                     ()=>{\r\n                        let link = \"/task/\"+temp+\"-\"+month+\"-\"+id;\r\n                        history.push(link);\r\n                     }\r\n                 } onMouseOver={\r\n                    ()=>{\r\n                       document.getElementById(trid).innerHTML = \"+ Task\";\r\n                    }\r\n                   \r\n                 }\r\n                 onMouseOut={\r\n                    ()=>{\r\n                        document.getElementById(trid).innerHTML = temp; \r\n                    }         \r\n                }>{j}</td> \r\n             })}</tr>\r\n         })\r\n     }\r\n    </tbody>\r\n  </table>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  </>\r\n}\r\n\r\nfunction convertToMonth(num)\r\n{\r\n  switch(num)\r\n  {\r\n      case 1 : \r\n      {\r\n          return \"January\";\r\n      }\r\n      case 2 : \r\n      {\r\n          return \"Febuary\";\r\n      }\r\n      case 3 :\r\n      {\r\n          return \"March\"\r\n      }\r\n      case 4 :\r\n      {\r\n          return \"April\"\r\n      }\r\n      case 5 :\r\n      {\r\n            return \"May\"\r\n      }\r\n      case 6 :\r\n        {\r\n            return \"June\"\r\n        }\r\n      case 7:\r\n        {\r\n            return \"July\"\r\n        }\r\n        case 8:\r\n        {\r\n            return \"August\"\r\n        } \r\n        case 9:\r\n        {\r\n            return \"September\"\r\n        } \r\n        case 10:\r\n        {\r\n            return \"October\"\r\n        } \r\n        case 11:\r\n        {\r\n            return \"November\"\r\n        } \r\n        case 12:\r\n        {\r\n            return \"December\"\r\n        } \r\n  }\r\n}\r\nfunction findStartDay(day)\r\n{  \r\n    switch(day)\r\n    {\r\n        case \"Sun\": return 0 ; \r\n        case \"Mon\": return 1 ; \r\n        case \"Tue\": return 2 ; \r\n        case \"Wed\": return 3 ; \r\n        case \"Thu\": return 4 ; \r\n        case \"Fri\": return 5 ; \r\n        case \"Sat\": return 6 ; \r\n    }\r\n}\r\n\r\nfunction makeFirstLine(day)\r\n{\r\n  let arr = [];\r\n  let i = 1 \r\n  for(; i <=day;i++)\r\n  {\r\n      arr.push(\" \");\r\n  }\r\n  for(let j = 1 ; i<=7;i++,j++)\r\n  {\r\n      arr.push(j)\r\n  }\r\n  return arr;\r\n}\r\nfunction makeNextLine(day,length)\r\n{\r\n  let filleddays = 7 - day; \r\n  let arr = [] ; \r\n  let remainingdays = length -filleddays;\r\n  let start = filleddays+1;\r\n\r\n  if(remainingdays%7==0)\r\n  {\r\n      remainingdays/=7;\r\n  }\r\n  else\r\n  {\r\n      remainingdays= Math.floor(remainingdays/7);\r\n      remainingdays++;\r\n  }\r\n  for(let i = 0 ; i<remainingdays;i++)\r\n  {\r\n      let temp = [];\r\n      for(let j =0 ;j<7 && start<=length;j++,start++)\r\n      {   \r\n          \r\n          temp.push(start)\r\n      }\r\n      arr.push(temp);\r\n  } \r\n  return arr;\r\n}","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\Alltask.js",["227","228","229","230"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Getalltask } from \"./api\";\r\n\r\nexport default function Alltask()\r\n{   \r\n    const history = useHistory();\r\n    const [tasklist,updatetasklist] = useState([]); \r\n    const {id} = useParams();\r\n    const calenderlink = `/calender/${id}`;\r\n    useEffect( async()=>{\r\n     let temp = await Getalltask(id);\r\n     console.log(temp);\r\n     updatetasklist([...temp.data]);\r\n    },[])\r\n    return <div class=\"container-fluid\">\r\n        <div class=\"row bg-primary taskheader\">\r\n           \r\n            <div class=\"col-1\">\r\n             <button class=\"btn btn-warning\" onClick={\r\n                     ()=>{\r\n                         history.push(calenderlink);\r\n                     }\r\n             }><i class=\"fas fa-arrow-circle-left fa-1x\"></i></button>                        \r\n            </div>\r\n            <div class=\"col-10\">\r\n                List of all task\r\n            </div>\r\n            <div class=\"col-1\">\r\n            <button class=\"btn btn-warning\" onClick={()=>{\r\n             window.localStorage.removeItem(\"app_token1\");\r\n             history.push(\"/\")\r\n         }}>Logout</button>                     \r\n            </div>\r\n            </div>\r\n            <div class=\"row col-12\">\r\n            <table class=\"table task\">\r\n    <thead>\r\n    <tr class=\"task\">\r\n      <th class=\"task action\" scope=\"col\">Date</th>\r\n      <th class=\"task time\" scope=\"col\">Time</th>\r\n      <th class=\"task name\" scope=\"col\">Task Name</th>\r\n      <th class=\"task des\" scope=\"col\">Description</th>\r\n      <th class=\"task time\" scope=\"col\">Status</th>\r\n      \r\n    </tr> \r\n  </thead>\r\n  <tbody>{\r\n    tasklist.map((i)=>{\r\n\r\n    return <tr class=\"task \">\r\n      <td class=\"task taskdata\">{i.Taskdate}-{convertToMonth(i.Taskmonth)}</td>\r\n      <td class=\"task taskdata\">{i.TaskTime}</td>\r\n      <td class=\"task taskdata\">{i.Taskname}</td>\r\n      <td class=\"task taskdata\">{i.Taskdescription}</td>\r\n      {\r\n      i.Completed==false?<td class=\"task taskdata\"style={{color:`red`}}><i class=\"fas fa-hourglass-half\"></i></td>:<td class=\"task taskdata\"style={{color:`Green`}}><i class=\"far fa-check-circle\"></i></td>\r\n      }</tr>})}\r\n  </tbody>\r\n      </table>\r\n        </div>\r\n        </div>\r\n        \r\n}\r\n\r\nfunction convertToMonth(num)\r\n{\r\n  switch(num)\r\n  {\r\n      case 1 : \r\n      {\r\n          return \"January\";\r\n      }\r\n      case 2 : \r\n      {\r\n          return \"Febuary\";\r\n      }\r\n      case 3 :\r\n      {\r\n          return \"March\"\r\n      }\r\n      case 4 :\r\n      {\r\n          return \"April\"\r\n      }\r\n      case 5 :\r\n      {\r\n            return \"May\"\r\n      }\r\n      case 6 :\r\n        {\r\n            return \"June\"\r\n        }\r\n      case 7:\r\n        {\r\n            return \"July\"\r\n        }\r\n        case 8:\r\n        {\r\n            return \"August\"\r\n        } \r\n        case 9:\r\n        {\r\n            return \"September\"\r\n        } \r\n        case 10:\r\n        {\r\n            return \"October\"\r\n        } \r\n        case 11:\r\n        {\r\n            return \"November\"\r\n        } \r\n        case 12:\r\n        {\r\n            return \"December\"\r\n        } \r\n  }\r\n}","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\taskdone.js",[],"C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\register.js",["231"],"C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\Remainder.js",["232","233","234","235","236"],"C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\Resetpassword.js",["237","238"],"import React, { useState } from \"react\"; \r\nimport { useHistory, useParams } from \"react-router\";\r\nimport {Resetpwd} from \"./api\";\r\n\r\nexport function Resetpassword()\r\n{ \r\n  const {id} = useParams();\r\n  const history = useHistory();\r\n  const[password,udpatepassword] = useState(\"\");\r\n  const[cpassword,udpatecpassword] = useState(\"\");\r\n  const[type,updatetype] = useState(\"password\");\r\n  const[message,updatemessage] = useState(\"\");\r\n    return  <div class=\"reset\">\r\n            <div class=\"container-fluid\">\r\n         <div class=\"row\">\r\n             <div class=\"offset-4 col-4\">\r\n                <form class=\"resetpass\" onSubmit={\r\n                   async (e)=>{\r\n                        e.preventDefault();\r\n                        let obj = {password};\r\n                        let result = await Resetpwd(id,obj);\r\n                        if(password===cpassword)\r\n                        {\r\n                        if(result.data.message==\"password updated\")\r\n                        {\r\n                            updatemessage(result.data.message);\r\n                            udpatepassword(\"\");\r\n                            udpatecpassword(\"\");\r\n                            setTimeout(()=>{history.push(\"/\")}, 3000);\r\n                            \r\n                        }}\r\n                        else\r\n                        {\r\n                            udpatepassword(\"\");\r\n                            udpatecpassword(\"\");\r\n                            updatemessage(\"Password must be identical\");\r\n                        }\r\n                    }\r\n                }>\r\n             <div class=\"mb-3 row\">\r\n              <label for=\"inputPassword\" class=\" col-form-label\">Password</label> <br/>\r\n                \r\n             <input type={type} class=\"form-control\" id=\"inputPassword\" value={password} onChange={\r\n                 (e)=>{\r\n                     udpatepassword(e.target.value);\r\n                 }\r\n             } required minLength=\"8\" />\r\n             \r\n                 </div>\r\n                 <div class=\"mb-3 row\">\r\n              <label for=\"inputPassword\" class=\" col-form-label\">Confirm Password</label><br/>\r\n                \r\n      <input type={type} class=\"form-control\" id=\"inputPassword\" value={cpassword} onChange={\r\n          (e)=>{\r\n              udpatecpassword(e.target.value);\r\n          }\r\n      } required minLength=\"8\"/>\r\n    </div>\r\n                 \r\n                 <div>\r\n                 <input type=\"checkbox\" id=\"showpassword\" name=\"showpassword\" onChange={\r\n                     (e)=>{\r\n                         if(type==\"password\")\r\n                         {\r\n                           updatetype(\"text\");\r\n                         }\r\n                         else\r\n                         {\r\n                             updatetype(\"password\");\r\n                         }\r\n\r\n                     }\r\n                 }/>\r\n                 < label for=\"vehicle1\">&nbsp;Show Password</label><br/>\r\n                 </div>\r\n                 <div style={{color:\"green\"}}>\r\n                     {message}\r\n                 </div><br/>\r\n                 <div> <button class=\"btn btn-primary\" type=\"submit\">Save</button>\r\n                     </div>\r\n                 </form>\r\n             </div>\r\n             </div>\r\n    </div>\r\n    </div>\r\n}","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\Pendingtask.js",["239","240","241","242","243","244"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Getalltask } from \"./api\";\r\n\r\nexport default function Pendingtask()\r\n{   \r\n    const history = useHistory();\r\n    const [tasklist,updatetasklist] = useState([]); \r\n    const {id} = useParams();\r\n    const calenderlink = `/calender/${id}`;\r\n    useEffect( async()=>{\r\n     let temp = await Getalltask(id);\r\n     console.log(temp);\r\n     updatetasklist([...temp.data]);\r\n    },[])\r\n    return <div class=\"container-fluid\">\r\n        <div class=\"row bg-primary taskheader\">\r\n           \r\n            <div class=\"col-1\">\r\n             <button class=\"btn btn-warning\" onClick={\r\n                     ()=>{\r\n                         history.push(calenderlink);\r\n                     }\r\n             }><i class=\"fas fa-arrow-circle-left fa-1x\"></i></button>                        \r\n            </div>\r\n            <div class=\"col-10\">\r\n                List of Pending task\r\n            </div>\r\n            <div class=\"col-1\">\r\n            <button class=\"btn btn-warning\" onClick={()=>{\r\n             window.localStorage.removeItem(\"app_token1\");\r\n             history.push(\"/\")\r\n         }}>Logout</button>                     \r\n            </div>\r\n            </div>\r\n            <div class=\"row col-12\">\r\n            <table class=\"table task\">\r\n    <thead>\r\n    <tr class=\"task\">\r\n      <th class=\"task action\" scope=\"col\">Date</th>\r\n      <th class=\"task time\" scope=\"col\">Time</th>\r\n      <th class=\"task name\" scope=\"col\">Task Name</th>\r\n      <th class=\"task des\" scope=\"col\">Description</th>\r\n      <th class=\"task time\" scope=\"col\">Status</th>\r\n      \r\n    </tr> \r\n  </thead>\r\n  <tbody>{\r\n    tasklist.map((i)=>{\r\n        if(i.Completed==false)\r\n        {\r\n    return <tr class=\"task \">\r\n      <td class=\"task taskdata\">{i.Taskdate}-{convertToMonth(i.Taskmonth)}</td>\r\n      <td class=\"task taskdata\">{i.TaskTime}</td>\r\n      <td class=\"task taskdata\">{i.Taskname}</td>\r\n      <td class=\"task taskdata\">{i.Taskdescription}</td>\r\n      {\r\n      i.Completed==false?<td class=\"task taskdata\"style={{color:`red`}}><i class=\"fas fa-hourglass-half\"></i></td>:<td class=\"task taskdata\"style={{color:`Green`}}><i class=\"far fa-check-circle\"></i></td>\r\n      }</tr>}})}\r\n  </tbody>\r\n      </table>\r\n        </div>\r\n        </div>\r\n        \r\n}\r\n\r\nfunction convertToMonth(num)\r\n{\r\n  switch(num)\r\n  {\r\n      case 1 : \r\n      {\r\n          return \"January\";\r\n      }\r\n      case 2 : \r\n      {\r\n          return \"Febuary\";\r\n      }\r\n      case 3 :\r\n      {\r\n          return \"March\"\r\n      }\r\n      case 4 :\r\n      {\r\n          return \"April\"\r\n      }\r\n      case 5 :\r\n      {\r\n            return \"May\"\r\n      }\r\n      case 6 :\r\n        {\r\n            return \"June\"\r\n        }\r\n      case 7:\r\n        {\r\n            return \"July\"\r\n        }\r\n        case 8:\r\n        {\r\n            return \"August\"\r\n        } \r\n        case 9:\r\n        {\r\n            return \"September\"\r\n        } \r\n        case 10:\r\n        {\r\n            return \"October\"\r\n        } \r\n        case 11:\r\n        {\r\n            return \"November\"\r\n        } \r\n        case 12:\r\n        {\r\n            return \"December\"\r\n        } \r\n  }\r\n}","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\forgetpassword.js",["245","246"],"import React, { useState } from \"react\";\r\nimport Background from \"./img/photo-1611988615248-5d4f0b9ac31e.jpg\";\r\nimport \"./App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Sentemail } from \"./api\";\r\n\r\n\r\n\r\nexport default function Forgetpassword()\r\n{    \r\n    const[message,updatemessage] = useState(\"\");\r\n    const[email,updateemail] = useState('');\r\n    const[success,updatesuccess] = useState(false);\r\n    return <div style={{\r\n        backgroundImage: `url(${Background})`,\r\n        backgroundSize: \"cover\",\r\n        height: \"100vh\",\r\n        color: \"#f5f5f5\"\r\n      }}\r\n     class=\"container-fluid row\">\r\n        <div class=\"col-5\">\r\n            <div class=\"login\">\r\n          <form>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\">\r\n          \r\n           </div>\r\n          </div>\r\n          <div class=\"container-fluid row\">\r\n              <div class=\"col-12\">\r\n          <label for=\"exampleFormControlInput1\" class=\"form-label label\">Enter your registered Email address to get password reset link</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" value={email} required onChange={\r\n            (e)=>{updateemail(e.target.value)}\r\n          }/>\r\n          </div></div><br/>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\">\r\n          {success==true?<span style={{color:\"green\"}}>{message}</span>:<span style={{color:\"red\"}}>{message}</span>}\r\n           </div>\r\n          </div><br/>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\">\r\n          <button type=\"button\" class=\"btn btn-primary\" onClick={\r\n            async()=>{\r\n              let res = await Sentemail({email:email});\r\n              updatemessage(res.data.message);\r\n              updatesuccess(res.data.sent);\r\n              updateemail(\"\");\r\n            }\r\n          }>Send Mail</button>\r\n           </div>\r\n          </div>\r\n          </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n}","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\Completedtask.js",["247","248","249","250","251","252"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Getalltask } from \"./api\";\r\n\r\nexport default function Completedtask()\r\n{   \r\n    const history = useHistory();\r\n    const [tasklist,updatetasklist] = useState([]); \r\n    const {id} = useParams();\r\n    const calenderlink = `/calender/${id}`;\r\n    useEffect( async()=>{\r\n     let temp = await Getalltask(id);\r\n     console.log(temp);\r\n     updatetasklist([...temp.data]);\r\n    },[])\r\n    return <div class=\"container-fluid\">\r\n        <div class=\"row bg-primary taskheader\">\r\n           \r\n            <div class=\"col-1\">\r\n             <button class=\"btn btn-warning\" onClick={\r\n                     ()=>{\r\n                         history.push(calenderlink);\r\n                     }\r\n             }><i class=\"fas fa-arrow-circle-left fa-1x\"></i></button>                        \r\n            </div>\r\n            <div class=\"col-10\">\r\n                List of Completed task\r\n            </div>\r\n            <div class=\"col-1\">\r\n            <button class=\"btn btn-warning\" onClick={()=>{\r\n             window.localStorage.removeItem(\"app_token1\");\r\n             history.push(\"/\")\r\n         }}>Logout</button>                     \r\n            </div>\r\n            </div>\r\n            <div class=\"row col-12\">\r\n            <table class=\"table task\">\r\n    <thead>\r\n    <tr class=\"task\">\r\n      <th class=\"task action\" scope=\"col\">Date</th>\r\n      <th class=\"task time\" scope=\"col\">Time</th>\r\n      <th class=\"task name\" scope=\"col\">Task Name</th>\r\n      <th class=\"task des\" scope=\"col\">Description</th>\r\n      <th class=\"task time\" scope=\"col\">Status</th>\r\n      \r\n    </tr> \r\n  </thead>\r\n  <tbody>{\r\n    tasklist.map((i)=>{\r\n        if(i.Completed==true)\r\n        {\r\n    return <tr class=\"task \">\r\n      <td class=\"task taskdata\">{i.Taskdate}-{convertToMonth(i.Taskmonth)}</td>\r\n      <td class=\"task taskdata\">{i.TaskTime}</td>\r\n      <td class=\"task taskdata\">{i.Taskname}</td>\r\n      <td class=\"task taskdata\">{i.Taskdescription}</td>\r\n      {\r\n      i.Completed==false?<td class=\"task taskdata\"style={{color:`red`}}><i class=\"fas fa-hourglass-half\"></i></td>:<td class=\"task taskdata\"style={{color:`Green`}}><i class=\"far fa-check-circle\"></i></td>\r\n      }</tr>}})}\r\n  </tbody>\r\n      </table>\r\n        </div>\r\n        </div>\r\n        \r\n}\r\n\r\nfunction convertToMonth(num)\r\n{\r\n  switch(num)\r\n  {\r\n      case 1 : \r\n      {\r\n          return \"January\";\r\n      }\r\n      case 2 : \r\n      {\r\n          return \"Febuary\";\r\n      }\r\n      case 3 :\r\n      {\r\n          return \"March\"\r\n      }\r\n      case 4 :\r\n      {\r\n          return \"April\"\r\n      }\r\n      case 5 :\r\n      {\r\n            return \"May\"\r\n      }\r\n      case 6 :\r\n        {\r\n            return \"June\"\r\n        }\r\n      case 7:\r\n        {\r\n            return \"July\"\r\n        }\r\n        case 8:\r\n        {\r\n            return \"August\"\r\n        } \r\n        case 9:\r\n        {\r\n            return \"September\"\r\n        } \r\n        case 10:\r\n        {\r\n            return \"October\"\r\n        } \r\n        case 11:\r\n        {\r\n            return \"November\"\r\n        } \r\n        case 12:\r\n        {\r\n            return \"December\"\r\n        } \r\n  }\r\n}","C:\\Users\\Gokul\\Documents\\GitHub\\Todolist-frontend\\src\\api.js",[],{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":1,"column":8,"nodeType":"259","messageId":"260","endLine":1,"endColumn":12},{"ruleId":"257","severity":1,"message":"261","line":8,"column":3,"nodeType":"259","messageId":"260","endLine":8,"endColumn":7},{"ruleId":"257","severity":1,"message":"262","line":17,"column":8,"nodeType":"259","messageId":"260","endLine":17,"endColumn":16},{"ruleId":"257","severity":1,"message":"261","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"263","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":22},{"ruleId":"257","severity":1,"message":"264","line":15,"column":9,"nodeType":"259","messageId":"260","endLine":15,"endColumn":13},{"ruleId":"257","severity":1,"message":"265","line":15,"column":14,"nodeType":"259","messageId":"260","endLine":15,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":23,"column":7,"nodeType":"268","endLine":23,"endColumn":9,"suggestions":"269"},{"ruleId":"270","severity":1,"message":"271","line":112,"column":17,"nodeType":"272","messageId":"273","endLine":112,"endColumn":19},{"ruleId":"274","severity":1,"message":"275","line":171,"column":3,"nodeType":"276","messageId":"277","endLine":221,"endColumn":4},{"ruleId":"274","severity":1,"message":"275","line":225,"column":5,"nodeType":"276","messageId":"277","endLine":234,"endColumn":6},{"ruleId":"270","severity":1,"message":"271","line":258,"column":21,"nodeType":"272","messageId":"273","endLine":258,"endColumn":23},{"ruleId":"257","severity":1,"message":"278","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":16},{"ruleId":"257","severity":1,"message":"261","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"279","line":26,"column":16,"nodeType":"280","endLine":57,"endColumn":6},{"ruleId":"270","severity":1,"message":"271","line":46,"column":24,"nodeType":"272","messageId":"273","endLine":46,"endColumn":26},{"ruleId":"270","severity":1,"message":"271","line":50,"column":24,"nodeType":"272","messageId":"273","endLine":50,"endColumn":26},{"ruleId":"270","severity":1,"message":"271","line":50,"column":45,"nodeType":"272","messageId":"273","endLine":50,"endColumn":47},{"ruleId":"266","severity":1,"message":"281","line":57,"column":7,"nodeType":"268","endLine":57,"endColumn":9,"suggestions":"282"},{"ruleId":"266","severity":1,"message":"279","line":58,"column":16,"nodeType":"280","endLine":67,"endColumn":6},{"ruleId":"266","severity":1,"message":"281","line":67,"column":7,"nodeType":"268","endLine":67,"endColumn":32,"suggestions":"283"},{"ruleId":"270","severity":1,"message":"271","line":113,"column":18,"nodeType":"272","messageId":"273","endLine":113,"endColumn":20},{"ruleId":"270","severity":1,"message":"271","line":163,"column":29,"nodeType":"272","messageId":"273","endLine":163,"endColumn":31},{"ruleId":"270","severity":1,"message":"271","line":194,"column":34,"nodeType":"272","messageId":"273","endLine":194,"endColumn":36},{"ruleId":"270","severity":1,"message":"271","line":291,"column":29,"nodeType":"272","messageId":"273","endLine":291,"endColumn":31},{"ruleId":"270","severity":1,"message":"271","line":322,"column":34,"nodeType":"272","messageId":"273","endLine":322,"endColumn":36},{"ruleId":"274","severity":1,"message":"275","line":401,"column":3,"nodeType":"276","messageId":"277","endLine":451,"endColumn":4},{"ruleId":"270","severity":1,"message":"271","line":62,"column":29,"nodeType":"272","messageId":"273","endLine":62,"endColumn":31},{"ruleId":"270","severity":1,"message":"271","line":96,"column":29,"nodeType":"272","messageId":"273","endLine":96,"endColumn":31},{"ruleId":"257","severity":1,"message":"261","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":14},{"ruleId":"270","severity":1,"message":"271","line":38,"column":19,"nodeType":"272","messageId":"273","endLine":38,"endColumn":21},{"ruleId":"270","severity":1,"message":"271","line":24,"column":47,"nodeType":"272","messageId":"273","endLine":24,"endColumn":49},{"ruleId":"270","severity":1,"message":"271","line":63,"column":33,"nodeType":"272","messageId":"273","endLine":63,"endColumn":35},{"ruleId":"266","severity":1,"message":"279","line":13,"column":15,"nodeType":"280","endLine":33,"endColumn":6},{"ruleId":"270","severity":1,"message":"271","line":16,"column":31,"nodeType":"272","messageId":"273","endLine":16,"endColumn":33},{"ruleId":"270","severity":1,"message":"271","line":18,"column":31,"nodeType":"272","messageId":"273","endLine":18,"endColumn":33},{"ruleId":"266","severity":1,"message":"284","line":33,"column":7,"nodeType":"268","endLine":33,"endColumn":9,"suggestions":"285"},{"ruleId":"270","severity":1,"message":"271","line":42,"column":24,"nodeType":"272","messageId":"273","endLine":42,"endColumn":26},{"ruleId":"266","severity":1,"message":"279","line":11,"column":16,"nodeType":"280","endLine":15,"endColumn":6},{"ruleId":"266","severity":1,"message":"286","line":15,"column":7,"nodeType":"268","endLine":15,"endColumn":9,"suggestions":"287"},{"ruleId":"270","severity":1,"message":"271","line":57,"column":18,"nodeType":"272","messageId":"273","endLine":57,"endColumn":20},{"ruleId":"274","severity":1,"message":"275","line":68,"column":3,"nodeType":"276","messageId":"277","endLine":118,"endColumn":4},{"ruleId":"266","severity":1,"message":"279","line":11,"column":16,"nodeType":"280","endLine":15,"endColumn":6},{"ruleId":"266","severity":1,"message":"286","line":15,"column":7,"nodeType":"268","endLine":15,"endColumn":9,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":49,"column":21,"nodeType":"280","messageId":"291","endLine":49,"endColumn":23},{"ruleId":"270","severity":1,"message":"271","line":50,"column":23,"nodeType":"272","messageId":"273","endLine":50,"endColumn":25},{"ruleId":"270","severity":1,"message":"271","line":58,"column":18,"nodeType":"272","messageId":"273","endLine":58,"endColumn":20},{"ruleId":"274","severity":1,"message":"275","line":69,"column":3,"nodeType":"276","messageId":"277","endLine":119,"endColumn":4},{"ruleId":"266","severity":1,"message":"279","line":11,"column":16,"nodeType":"280","endLine":15,"endColumn":6},{"ruleId":"266","severity":1,"message":"286","line":15,"column":7,"nodeType":"268","endLine":15,"endColumn":9,"suggestions":"292"},{"ruleId":"289","severity":1,"message":"290","line":49,"column":21,"nodeType":"280","messageId":"291","endLine":49,"endColumn":23},{"ruleId":"270","severity":1,"message":"271","line":50,"column":23,"nodeType":"272","messageId":"273","endLine":50,"endColumn":25},{"ruleId":"270","severity":1,"message":"271","line":58,"column":18,"nodeType":"272","messageId":"273","endLine":58,"endColumn":20},{"ruleId":"274","severity":1,"message":"275","line":69,"column":3,"nodeType":"276","messageId":"277","endLine":119,"endColumn":4},{"ruleId":"257","severity":1,"message":"258","line":1,"column":8,"nodeType":"259","messageId":"260","endLine":1,"endColumn":12},{"ruleId":"257","severity":1,"message":"261","line":8,"column":3,"nodeType":"259","messageId":"260","endLine":8,"endColumn":7},{"ruleId":"257","severity":1,"message":"262","line":17,"column":8,"nodeType":"259","messageId":"260","endLine":17,"endColumn":16},{"ruleId":"257","severity":1,"message":"278","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":16},{"ruleId":"257","severity":1,"message":"261","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"279","line":26,"column":16,"nodeType":"280","endLine":57,"endColumn":6},{"ruleId":"270","severity":1,"message":"271","line":46,"column":24,"nodeType":"272","messageId":"273","endLine":46,"endColumn":26},{"ruleId":"270","severity":1,"message":"271","line":50,"column":24,"nodeType":"272","messageId":"273","endLine":50,"endColumn":26},{"ruleId":"270","severity":1,"message":"271","line":50,"column":45,"nodeType":"272","messageId":"273","endLine":50,"endColumn":47},{"ruleId":"266","severity":1,"message":"281","line":57,"column":7,"nodeType":"268","endLine":57,"endColumn":9,"suggestions":"293"},{"ruleId":"266","severity":1,"message":"279","line":58,"column":16,"nodeType":"280","endLine":67,"endColumn":6},{"ruleId":"266","severity":1,"message":"281","line":67,"column":7,"nodeType":"268","endLine":67,"endColumn":32,"suggestions":"294"},{"ruleId":"270","severity":1,"message":"271","line":113,"column":18,"nodeType":"272","messageId":"273","endLine":113,"endColumn":20},{"ruleId":"270","severity":1,"message":"271","line":163,"column":29,"nodeType":"272","messageId":"273","endLine":163,"endColumn":31},{"ruleId":"270","severity":1,"message":"271","line":194,"column":34,"nodeType":"272","messageId":"273","endLine":194,"endColumn":36},{"ruleId":"270","severity":1,"message":"271","line":291,"column":29,"nodeType":"272","messageId":"273","endLine":291,"endColumn":31},{"ruleId":"270","severity":1,"message":"271","line":322,"column":34,"nodeType":"272","messageId":"273","endLine":322,"endColumn":36},{"ruleId":"274","severity":1,"message":"275","line":401,"column":3,"nodeType":"276","messageId":"277","endLine":451,"endColumn":4},{"ruleId":"270","severity":1,"message":"271","line":62,"column":29,"nodeType":"272","messageId":"273","endLine":62,"endColumn":31},{"ruleId":"257","severity":1,"message":"261","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"263","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":22},{"ruleId":"257","severity":1,"message":"264","line":15,"column":9,"nodeType":"259","messageId":"260","endLine":15,"endColumn":13},{"ruleId":"257","severity":1,"message":"265","line":15,"column":14,"nodeType":"259","messageId":"260","endLine":15,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":23,"column":7,"nodeType":"268","endLine":23,"endColumn":9,"suggestions":"295"},{"ruleId":"270","severity":1,"message":"271","line":112,"column":17,"nodeType":"272","messageId":"273","endLine":112,"endColumn":19},{"ruleId":"274","severity":1,"message":"275","line":171,"column":3,"nodeType":"276","messageId":"277","endLine":221,"endColumn":4},{"ruleId":"274","severity":1,"message":"275","line":225,"column":5,"nodeType":"276","messageId":"277","endLine":234,"endColumn":6},{"ruleId":"270","severity":1,"message":"271","line":258,"column":21,"nodeType":"272","messageId":"273","endLine":258,"endColumn":23},{"ruleId":"266","severity":1,"message":"279","line":11,"column":16,"nodeType":"280","endLine":15,"endColumn":6},{"ruleId":"266","severity":1,"message":"286","line":15,"column":7,"nodeType":"268","endLine":15,"endColumn":9,"suggestions":"296"},{"ruleId":"270","severity":1,"message":"271","line":57,"column":18,"nodeType":"272","messageId":"273","endLine":57,"endColumn":20},{"ruleId":"274","severity":1,"message":"275","line":68,"column":3,"nodeType":"276","messageId":"277","endLine":118,"endColumn":4},{"ruleId":"270","severity":1,"message":"271","line":96,"column":29,"nodeType":"272","messageId":"273","endLine":96,"endColumn":31},{"ruleId":"266","severity":1,"message":"279","line":13,"column":15,"nodeType":"280","endLine":33,"endColumn":6},{"ruleId":"270","severity":1,"message":"271","line":16,"column":31,"nodeType":"272","messageId":"273","endLine":16,"endColumn":33},{"ruleId":"270","severity":1,"message":"271","line":18,"column":31,"nodeType":"272","messageId":"273","endLine":18,"endColumn":33},{"ruleId":"266","severity":1,"message":"284","line":33,"column":7,"nodeType":"268","endLine":33,"endColumn":9,"suggestions":"297"},{"ruleId":"270","severity":1,"message":"271","line":42,"column":24,"nodeType":"272","messageId":"273","endLine":42,"endColumn":26},{"ruleId":"270","severity":1,"message":"271","line":24,"column":47,"nodeType":"272","messageId":"273","endLine":24,"endColumn":49},{"ruleId":"270","severity":1,"message":"271","line":63,"column":33,"nodeType":"272","messageId":"273","endLine":63,"endColumn":35},{"ruleId":"266","severity":1,"message":"279","line":11,"column":16,"nodeType":"280","endLine":15,"endColumn":6},{"ruleId":"266","severity":1,"message":"286","line":15,"column":7,"nodeType":"268","endLine":15,"endColumn":9,"suggestions":"298"},{"ruleId":"289","severity":1,"message":"290","line":49,"column":21,"nodeType":"280","messageId":"291","endLine":49,"endColumn":23},{"ruleId":"270","severity":1,"message":"271","line":50,"column":23,"nodeType":"272","messageId":"273","endLine":50,"endColumn":25},{"ruleId":"270","severity":1,"message":"271","line":58,"column":18,"nodeType":"272","messageId":"273","endLine":58,"endColumn":20},{"ruleId":"274","severity":1,"message":"275","line":69,"column":3,"nodeType":"276","messageId":"277","endLine":119,"endColumn":4},{"ruleId":"257","severity":1,"message":"261","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":14},{"ruleId":"270","severity":1,"message":"271","line":38,"column":19,"nodeType":"272","messageId":"273","endLine":38,"endColumn":21},{"ruleId":"266","severity":1,"message":"279","line":11,"column":16,"nodeType":"280","endLine":15,"endColumn":6},{"ruleId":"266","severity":1,"message":"286","line":15,"column":7,"nodeType":"268","endLine":15,"endColumn":9,"suggestions":"299"},{"ruleId":"289","severity":1,"message":"290","line":49,"column":21,"nodeType":"280","messageId":"291","endLine":49,"endColumn":23},{"ruleId":"270","severity":1,"message":"271","line":50,"column":23,"nodeType":"272","messageId":"273","endLine":50,"endColumn":25},{"ruleId":"270","severity":1,"message":"271","line":58,"column":18,"nodeType":"272","messageId":"273","endLine":58,"endColumn":20},{"ruleId":"274","severity":1,"message":"275","line":69,"column":3,"nodeType":"276","messageId":"277","endLine":119,"endColumn":4},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'taskdone' is defined but never used.","'createPopper' is defined but never used.","'data' is assigned a value but never used.","'updatedata' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array.","ArrayExpression",["302"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Button' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'arr' and 'task'. Either include them or remove the dependency array.",["303"],["304"],"React Hook useEffect has missing dependencies: 'history' and 'id'. Either include them or remove the dependency array.",["305"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["306"],["307"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["308"],["309"],["310"],["311"],["312"],["313"],["314"],["315"],"no-global-assign","no-unsafe-negation",{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"324","fix":"326"},{"desc":"324","fix":"327"},{"desc":"318","fix":"328"},{"desc":"320","fix":"329"},{"desc":"316","fix":"330"},{"desc":"324","fix":"331"},{"desc":"322","fix":"332"},{"desc":"324","fix":"333"},{"desc":"324","fix":"334"},"Update the dependencies array to be: [date]",{"range":"335","text":"336"},"Update the dependencies array to be: [arr, task]",{"range":"337","text":"338"},"Update the dependencies array to be: [modalShow, editmodalShow, task, arr]",{"range":"339","text":"340"},"Update the dependencies array to be: [history, id]",{"range":"341","text":"342"},"Update the dependencies array to be: [id]",{"range":"343","text":"344"},{"range":"345","text":"344"},{"range":"346","text":"344"},{"range":"347","text":"338"},{"range":"348","text":"340"},{"range":"349","text":"336"},{"range":"350","text":"344"},{"range":"351","text":"342"},{"range":"352","text":"344"},{"range":"353","text":"344"},[1088,1090],"[date]",[1863,1865],"[arr, task]",[2115,2140],"[modalShow, editmodalShow, task, arr]",[1011,1013],"[history, id]",[488,490],"[id]",[494,496],[492,494],[1863,1865],[2115,2140],[1088,1090],[488,490],[1011,1013],[492,494],[494,496]]