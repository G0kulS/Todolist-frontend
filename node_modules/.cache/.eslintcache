[{"D:\\Fullstackproject\\todolist\\src\\index.js":"1","D:\\Fullstackproject\\todolist\\src\\reportWebVitals.js":"2","D:\\Fullstackproject\\todolist\\src\\App.js":"3","D:\\Fullstackproject\\todolist\\src\\calender.js":"4","D:\\Fullstackproject\\todolist\\src\\task.js":"5","D:\\Fullstackproject\\todolist\\src\\login.js":"6","D:\\Fullstackproject\\todolist\\src\\register.js":"7","D:\\Fullstackproject\\todolist\\src\\forgetpassword.js":"8","D:\\Fullstackproject\\todolist\\src\\api.js":"9","D:\\Fullstackproject\\todolist\\src\\taskcontext.js":"10","D:\\Fullstackproject\\todolist\\src\\Resetpassword.js":"11","D:\\Fullstackproject\\todolist\\src\\Remainder.js":"12","D:\\Fullstackproject\\todolist\\src\\taskdone.js":"13","D:\\Fullstackproject\\todolist\\src\\Alltask.js":"14","D:\\Fullstackproject\\todolist\\src\\Completedtask.js":"15","D:\\Fullstackproject\\todolist\\src\\Pendingtask.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1766,"mtime":1620931222838,"results":"20","hashOfConfig":"18"},{"size":8726,"mtime":1620931229304,"results":"21","hashOfConfig":"18"},{"size":14850,"mtime":1620928927155,"results":"22","hashOfConfig":"18"},{"size":3549,"mtime":1620827937506,"results":"23","hashOfConfig":"18"},{"size":4756,"mtime":1620580504461,"results":"24","hashOfConfig":"18"},{"size":2034,"mtime":1620931391714,"results":"25","hashOfConfig":"18"},{"size":1635,"mtime":1620930124836,"results":"26","hashOfConfig":"18"},{"size":332,"mtime":1620642837095,"results":"27","hashOfConfig":"18"},{"size":3303,"mtime":1620912230949,"results":"28","hashOfConfig":"18"},{"size":2307,"mtime":1620826141534,"results":"29","hashOfConfig":"18"},{"size":386,"mtime":1620822110645,"results":"30","hashOfConfig":"18"},{"size":3157,"mtime":1620930841947,"results":"31","hashOfConfig":"18"},{"size":3210,"mtime":1620931067947,"results":"32","hashOfConfig":"18"},{"size":3207,"mtime":1620931212272,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1110ex9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Fullstackproject\\todolist\\src\\index.js",[],["70","71"],"D:\\Fullstackproject\\todolist\\src\\reportWebVitals.js",[],"D:\\Fullstackproject\\todolist\\src\\App.js",["72","73","74"],"D:\\Fullstackproject\\todolist\\src\\calender.js",["75","76","77","78","79","80","81","82","83"],"D:\\Fullstackproject\\todolist\\src\\task.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"D:\\Fullstackproject\\todolist\\src\\login.js",["99"],"import React, { useState } from \"react\";\r\nimport Background from \"./img/1489353.jpg\";\r\nimport \"./App.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { loginuser } from \"./api\";\r\n\r\n\r\n\r\nexport default function Login()\r\n{    \r\n    let history = useHistory();\r\n    const[type,updatetype] = useState(\"password\");\r\n    const[email,updateemail] = useState(\"\");\r\n    const[password,updatepassword] = useState(\"\");\r\n    const[message,updatemessage] = useState(\"\");\r\n\r\n    return <div style={{\r\n        backgroundImage: `url(${Background})`,\r\n        backgroundSize: \"cover\",\r\n        height: \"100vh\",\r\n        color: \"#f5f5f5\"\r\n      }}\r\n     class=\"container-fluid row\">\r\n        <div class=\"col-4\">\r\n            <div class=\"login\">\r\n          <form onSubmit={\r\n              async(e)=>{\r\n                  e.preventDefault();\r\n                  let obj = {email,password}\r\n                  let response = await loginuser(obj)\r\n                  if(response.data.message===\"Allowed\")\r\n                  {\r\n                      updateemail(\"\")\r\n                      updatepassword(\"\");\r\n                      window.localStorage.setItem(\"app_token1\",response.data.token);\r\n                      let temp = \"/calender/\"+response.data.userid;\r\n                      history.push(temp);\r\n                  }\r\n                  else\r\n                  {\r\n                    updateemail(\"\")\r\n                    updatepassword(\"\");  \r\n                    updatemessage(response.data.message);\r\n                  }\r\n              }\r\n          }>\r\n          <div class=\"container-fluid row\">\r\n              <div class=\"col-12\">\r\n          <label for=\"exampleFormControlInput1\" class=\"form-label label\">Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" required value={email} onChange={\r\n              (e)=>{updateemail(e.target.value)}\r\n          }/>\r\n          </div></div><br/>\r\n          <div class=\"container-fluid row \">\r\n              <div class=\"col-12\">\r\n              <label for=\"password\" class=\"form-label label\">Password</label>\r\n               <input type={type} class=\"form-control\" id=\"password\" required value={password} onChange={(e)=>{updatepassword(e.target.value)}}/>\r\n              </div>\r\n              <div class=\"co1-12\">\r\n               <input type=\"checkbox\" id=\"showpassword\" name=\"showpassword\" value=\"password\" onChange={\r\n                   ()=>{\r\n                     if(type==\"password\")\r\n                     {\r\n                         updatetype(\"text\")\r\n                     }\r\n                     else\r\n                     {\r\n                        updatetype(\"password\")\r\n                     }\r\n                   }\r\n               } />\r\n               <label for=\"showpassword\">&nbsp; Show Password</label><br/>\r\n              </div>\r\n          </div><br/>\r\n          <div class=\"container-fluid row \">\r\n              <div class=\"col-12\">\r\n          <Link to =\"/forgetpassword\"><span>Forget Password</span></Link>&nbsp;&nbsp;<Link to=\"/reg\"><span>Register</span></Link></div>\r\n          </div>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\" style={{color:\"red\"}}>\r\n          {message}\r\n           </div>\r\n          </div><br/>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n           </div>\r\n          </div>\r\n          </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n}","D:\\Fullstackproject\\todolist\\src\\register.js",["100"],"import React, { useState } from \"react\";\r\nimport Background from \"./img/To-do-List.jpg\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { RegisterUser } from \"./api\";\r\n\r\n\r\n\r\n\r\nexport default function Registry()\r\n{   \r\n    let history = useHistory();\r\n    const[type,updatetype] = useState(\"password\");\r\n    const[message,updatemessage] = useState(\"\");\r\n    const[name,updatename] = useState(\"\");\r\n    const[email,updateemail] = useState(\"\");\r\n    const[password,updatepassword] = useState(\"\");\r\n    const[cpassword,updatecpassword] = useState(\"\");\r\n    const[color,updatecolor] = useState(\"Red\");\r\n    return <div style={{\r\n        backgroundImage: `url(${Background})`,\r\n        backgroundSize: \"cover\",\r\n        height: \"100vh\",\r\n        color: \"#f5f5f5\"\r\n      }}\r\n     class=\"container-fluid row\">\r\n        <div class=\"offset-5 col-4\">\r\n            <div class=\"register\">\r\n          <form onSubmit ={\r\n           async   (e)=>{\r\n                  e.preventDefault();\r\n                  if(password===cpassword)\r\n                  {\r\n                  let obj = {\r\n                      Name : name,\r\n                      email :email,\r\n                      password:password  \r\n                  }\r\n                  let response = await RegisterUser(obj);\r\n                  if(response.data.message===\"Registered\")\r\n                  {\r\n                      updatecolor(\"green\");\r\n                      updatemessage(response.data.message);\r\n                      updatename(\"\");\r\n                      updatepassword(\"\");\r\n                      updateemail(\"\");\r\n                      updatecpassword(\"\");\r\n                      history.push(\"/\");\r\n                  }\r\n                  else\r\n                  {\r\n                    updatemessage(response.data.message);\r\n                    updatename(\"\");\r\n                    updatepassword(\"\");\r\n                    updateemail(\"\");\r\n                    updatecpassword(\"\");\r\n                  }\r\n                  }\r\n                  else\r\n                  {\r\n                      updatemessage(\"Password must be identical\")\r\n                  }\r\n              }\r\n          }>\r\n          <div class=\"container-fluid row\">\r\n          <div class=\"col-12\">\r\n          <label for=\"name\" class=\"form-label label\">Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"name\" value={name} required onChange={\r\n              (e)=>{\r\n                  updatename(e.target.value);\r\n                  \r\n              }\r\n          }/>\r\n          </div></div><br/>\r\n          <div class=\"container-fluid row\">\r\n              <div class=\"col-12\">\r\n          <label for=\"exampleFormControlInput1\" class=\"form-label label\">Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" value={email} required onChange={\r\n              (e)=>{updateemail(e.target.value)}\r\n          }/>\r\n          </div></div><br/>\r\n          <div class=\"container-fluid row \">\r\n              <div class=\"col-12\">\r\n              <label for=\"password\" class=\"form-label label\">Password</label>\r\n               <input type={type} class=\"form-control\" id=\"password\" required value={password} onChange={(e)=>{updatepassword(e.target.value)}} minLength=\"8\"/>\r\n              </div>\r\n              </div><br/>\r\n          <div class=\"container-fluid row \">\r\n              <div class=\"col-12\">\r\n              <label for=\"password\" class=\"form-label label\">Confirm Password</label>\r\n               <input type={type} class=\"form-control\" id=\"password\" required value={cpassword} onChange={(e)=>{updatecpassword(e.target.value)}} minLength=\"8\"/>\r\n              </div><br/>\r\n              <div class=\"co1-12\">\r\n               <input type=\"checkbox\" id=\"showpassword\" name=\"showpassword\" value=\"password\" onChange={\r\n                   ()=>{\r\n                     if(type==\"password\")\r\n                     {\r\n                         updatetype(\"text\")\r\n                     }\r\n                     else\r\n                     {\r\n                        updatetype(\"password\")\r\n                     }\r\n                   }\r\n               }/>\r\n               <label for=\"showpassword\">&nbsp; Show Password</label><br/>\r\n              </div>\r\n          </div><br/>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\" style={{color:`${color}`}}>\r\n           {message}\r\n           </div>\r\n          </div><br/>\r\n          <div class=\"container-fluid row \">\r\n          <div class=\"col-12\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Register</button>\r\n           </div>\r\n          </div>\r\n         \r\n          </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n}","D:\\Fullstackproject\\todolist\\src\\forgetpassword.js",["101","102"],"D:\\Fullstackproject\\todolist\\src\\api.js",[],"D:\\Fullstackproject\\todolist\\src\\taskcontext.js",[],"D:\\Fullstackproject\\todolist\\src\\Resetpassword.js",["103","104"],"D:\\Fullstackproject\\todolist\\src\\Remainder.js",["105","106","107","108","109"],"import React, { useEffect, useState } from \"react\"; \r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Deletetask, Getsingletask, Updatesingletask } from \"./api\";\r\n\r\nexport default function Remainder()\r\n{   \r\n   const {id} = useParams();\r\n   const history = useHistory();\r\n   const [taskname,updatetaskname] = useState(\"\");\r\n   const [taskdes,updatetaskdes] = useState(\"\");\r\n   const [taskstatus,updatetaskstatus] = useState(false);\r\n   const [tt,updatett] = useState(\"\");\r\n    useEffect(async()=>{\r\n      let result = await Getsingletask(id);\r\n      console.log(result.data);\r\n      if(result.data.available==true)\r\n      {\r\n      if(result.data.Completed==true)\r\n      {\r\n        history.push(\"/taskdone\");\r\n      }\r\n      else\r\n      {\r\n        updatetaskname(result.data.Taskname);\r\n        updatetaskdes(result.data.Taskdescription);\r\n        updatett(result.data.TaskTime);\r\n        updatetaskstatus(result.data.Completed);\r\n      }\r\n    }else\r\n    {\r\n      history.push(\"/\")\r\n    }\r\n    },[])\r\n   return <div class=\"reset\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class='offset-3 col-7'>\r\n            <div class=\"textdes\">\r\n           <span class=\"design-text\">   Taskname : </span> {taskname} <br/><br/>\r\n            <span class=\"design-text\">  Taskdescription:</span> {taskdes} <br/><br/>\r\n            <span class=\"design-text\">   Tasktime :</span> {tt}<br/><br/>\r\n            {taskstatus==false?<><span class=\"design-text\">Status :</span><span>Yet to Complete</span></>:<><span class=\"design-text\">Status :</span><span style={{color:\"Green\"}}>Task Completed</span></>}\r\n            <br/><br/>\r\n            <div className=\"container-fluid row \">\r\n              <div class=\"col-6\">\r\n            <button class=\"btn btn-danger\" onClick={async()=>{\r\n              await Deletetask(id);\r\n              history.push(\"/\");\r\n            }}>Cancel Event</button></div><div className=\"col-6\"><button class=\"btn btn-success\" onClick={\r\n              async()=>{\r\n                 await Updatesingletask(id,{Completed:true})\r\n                 history.push(\"/taskdone\");\r\n              }\r\n            }>Task done</button> \r\n              </div>\r\n              </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        </div>    \r\n     </div> \r\n}","D:\\Fullstackproject\\todolist\\src\\taskdone.js",[],"D:\\Fullstackproject\\todolist\\src\\Alltask.js",["110","111","112","113"],"D:\\Fullstackproject\\todolist\\src\\Completedtask.js",["114","115","116","117","118","119"],"D:\\Fullstackproject\\todolist\\src\\Pendingtask.js",["120","121","122","123","124","125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":12},{"ruleId":"130","severity":1,"message":"134","line":8,"column":3,"nodeType":"132","messageId":"133","endLine":8,"endColumn":7},{"ruleId":"130","severity":1,"message":"135","line":17,"column":8,"nodeType":"132","messageId":"133","endLine":17,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"136","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":22},{"ruleId":"130","severity":1,"message":"137","line":15,"column":9,"nodeType":"132","messageId":"133","endLine":15,"endColumn":13},{"ruleId":"130","severity":1,"message":"138","line":15,"column":14,"nodeType":"132","messageId":"133","endLine":15,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":23,"column":7,"nodeType":"141","endLine":23,"endColumn":9,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":112,"column":17,"nodeType":"145","messageId":"146","endLine":112,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":171,"column":3,"nodeType":"149","messageId":"150","endLine":221,"endColumn":4},{"ruleId":"147","severity":1,"message":"148","line":225,"column":5,"nodeType":"149","messageId":"150","endLine":234,"endColumn":6},{"ruleId":"143","severity":1,"message":"144","line":258,"column":21,"nodeType":"145","messageId":"146","endLine":258,"endColumn":23},{"ruleId":"130","severity":1,"message":"151","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":14},{"ruleId":"139","severity":1,"message":"152","line":26,"column":16,"nodeType":"153","endLine":57,"endColumn":6},{"ruleId":"143","severity":1,"message":"144","line":46,"column":24,"nodeType":"145","messageId":"146","endLine":46,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":50,"column":24,"nodeType":"145","messageId":"146","endLine":50,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":50,"column":45,"nodeType":"145","messageId":"146","endLine":50,"endColumn":47},{"ruleId":"139","severity":1,"message":"154","line":57,"column":7,"nodeType":"141","endLine":57,"endColumn":9,"suggestions":"155"},{"ruleId":"139","severity":1,"message":"152","line":58,"column":16,"nodeType":"153","endLine":67,"endColumn":6},{"ruleId":"139","severity":1,"message":"154","line":67,"column":7,"nodeType":"141","endLine":67,"endColumn":32,"suggestions":"156"},{"ruleId":"143","severity":1,"message":"144","line":113,"column":18,"nodeType":"145","messageId":"146","endLine":113,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":163,"column":29,"nodeType":"145","messageId":"146","endLine":163,"endColumn":31},{"ruleId":"143","severity":1,"message":"144","line":194,"column":34,"nodeType":"145","messageId":"146","endLine":194,"endColumn":36},{"ruleId":"143","severity":1,"message":"144","line":291,"column":29,"nodeType":"145","messageId":"146","endLine":291,"endColumn":31},{"ruleId":"143","severity":1,"message":"144","line":322,"column":34,"nodeType":"145","messageId":"146","endLine":322,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":401,"column":3,"nodeType":"149","messageId":"150","endLine":451,"endColumn":4},{"ruleId":"143","severity":1,"message":"144","line":62,"column":29,"nodeType":"145","messageId":"146","endLine":62,"endColumn":31},{"ruleId":"143","severity":1,"message":"144","line":96,"column":29,"nodeType":"145","messageId":"146","endLine":96,"endColumn":31},{"ruleId":"130","severity":1,"message":"134","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":38,"column":19,"nodeType":"145","messageId":"146","endLine":38,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":24,"column":47,"nodeType":"145","messageId":"146","endLine":24,"endColumn":49},{"ruleId":"143","severity":1,"message":"144","line":63,"column":33,"nodeType":"145","messageId":"146","endLine":63,"endColumn":35},{"ruleId":"139","severity":1,"message":"152","line":13,"column":15,"nodeType":"153","endLine":33,"endColumn":6},{"ruleId":"143","severity":1,"message":"144","line":16,"column":31,"nodeType":"145","messageId":"146","endLine":16,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":18,"column":31,"nodeType":"145","messageId":"146","endLine":18,"endColumn":33},{"ruleId":"139","severity":1,"message":"157","line":33,"column":7,"nodeType":"141","endLine":33,"endColumn":9,"suggestions":"158"},{"ruleId":"143","severity":1,"message":"144","line":42,"column":24,"nodeType":"145","messageId":"146","endLine":42,"endColumn":26},{"ruleId":"139","severity":1,"message":"152","line":11,"column":16,"nodeType":"153","endLine":15,"endColumn":6},{"ruleId":"139","severity":1,"message":"159","line":15,"column":7,"nodeType":"141","endLine":15,"endColumn":9,"suggestions":"160"},{"ruleId":"143","severity":1,"message":"144","line":57,"column":18,"nodeType":"145","messageId":"146","endLine":57,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":68,"column":3,"nodeType":"149","messageId":"150","endLine":118,"endColumn":4},{"ruleId":"139","severity":1,"message":"152","line":11,"column":16,"nodeType":"153","endLine":15,"endColumn":6},{"ruleId":"139","severity":1,"message":"159","line":15,"column":7,"nodeType":"141","endLine":15,"endColumn":9,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":49,"column":21,"nodeType":"153","messageId":"164","endLine":49,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":50,"column":23,"nodeType":"145","messageId":"146","endLine":50,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":58,"column":18,"nodeType":"145","messageId":"146","endLine":58,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":69,"column":3,"nodeType":"149","messageId":"150","endLine":119,"endColumn":4},{"ruleId":"139","severity":1,"message":"152","line":11,"column":16,"nodeType":"153","endLine":15,"endColumn":6},{"ruleId":"139","severity":1,"message":"159","line":15,"column":7,"nodeType":"141","endLine":15,"endColumn":9,"suggestions":"165"},{"ruleId":"162","severity":1,"message":"163","line":49,"column":21,"nodeType":"153","messageId":"164","endLine":49,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":50,"column":23,"nodeType":"145","messageId":"146","endLine":50,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":58,"column":18,"nodeType":"145","messageId":"146","endLine":58,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":69,"column":3,"nodeType":"149","messageId":"150","endLine":119,"endColumn":4},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'taskdone' is defined but never used.","'createPopper' is defined but never used.","'data' is assigned a value but never used.","'updatedata' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array.","ArrayExpression",["168"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Button' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'arr' and 'task'. Either include them or remove the dependency array.",["169"],["170"],"React Hook useEffect has missing dependencies: 'history' and 'id'. Either include them or remove the dependency array.",["171"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["172"],["173"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"183","fix":"185"},{"desc":"183","fix":"186"},"Update the dependencies array to be: [date]",{"range":"187","text":"188"},"Update the dependencies array to be: [arr, task]",{"range":"189","text":"190"},"Update the dependencies array to be: [modalShow, editmodalShow, task, arr]",{"range":"191","text":"192"},"Update the dependencies array to be: [history, id]",{"range":"193","text":"194"},"Update the dependencies array to be: [id]",{"range":"195","text":"196"},{"range":"197","text":"196"},{"range":"198","text":"196"},[1088,1090],"[date]",[1863,1865],"[arr, task]",[2115,2140],"[modalShow, editmodalShow, task, arr]",[1011,1013],"[history, id]",[488,490],"[id]",[494,496],[492,494]]